{
	"id": "dab5d1f0ba280a49bb3b659715783993",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LokeyERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract LokeyER20 is ERC20 {\r\n    address private lo_stake;\r\n    uint256 private max_supply = 1000000000 ether;\r\n    address private admin;\r\n    constructor() ERC20(\"LokeyDAO\", \"LOKEY\") {\r\n        admin = msg.sender;\r\n        _mint(admin, 50000000 ether);\r\n    }\r\n\r\n    modifier loStakeOnly {\r\n        require(msg.sender == lo_stake, \"Unauthorized\");\r\n        _;\r\n    }\r\n\r\n    function mint(uint256 amount) public loStakeOnly returns (bool) {\r\n        uint256 total_sup = totalSupply();\r\n        require(total_sup + amount <= max_supply, \"LOKEY: Exceeds Limit\");\r\n        _mint(lo_stake, amount);\r\n        return true;\r\n    }\r\n\r\n    function setLoStake(address _lo_stake) public returns (bool, address) {\r\n        require(msg.sender == admin, \"Unauthorized\");\r\n        require(lo_stake == address(0), \"LoStake already set\");\r\n        lo_stake = _lo_stake;\r\n        return (true, lo_stake);\r\n    }\r\n\r\n    function maxSupply() public view returns (uint256) {\r\n        return max_supply;\r\n    }\r\n\r\n    function viewLoStake() public view returns (address) {\r\n        return lo_stake;\r\n    }\r\n\r\n    function viewAdmin() public view returns (address) {\r\n        return admin;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 2000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:923   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:90   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":143:148   */\n  dup1\n    /* \"#utility.yul\":136:141   */\n  dup2\n    /* \"#utility.yul\":129:149   */\n  revert\n    /* \"#utility.yul\":88:90   */\ntag_24:\n    /* \"#utility.yul\":170:183   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":232:242   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":229:231   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":245:263   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":320:322   */\n  0x40\n    /* \"#utility.yul\":314:323   */\n  mload\n    /* \"#utility.yul\":288:290   */\n  0x1f\n    /* \"#utility.yul\":374:387   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":370:392   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":394:396   */\n  0x3f\n    /* \"#utility.yul\":366:397   */\n  add\n    /* \"#utility.yul\":362:402   */\n  and\n    /* \"#utility.yul\":350:403   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":418:436   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":438:460   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":415:461   */\n  or\n    /* \"#utility.yul\":412:414   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":464:482   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":504:514   */\n  dup2\n    /* \"#utility.yul\":500:502   */\n  0x40\n    /* \"#utility.yul\":493:515   */\n  mstore\n    /* \"#utility.yul\":539:541   */\n  dup4\n    /* \"#utility.yul\":531:537   */\n  dup2\n    /* \"#utility.yul\":524:542   */\n  mstore\n    /* \"#utility.yul\":561:565   */\n  0x20\n    /* \"#utility.yul\":551:565   */\n  swap3\n  pop\n    /* \"#utility.yul\":606:609   */\n  dup7\n    /* \"#utility.yul\":601:603   */\n  dup4\n    /* \"#utility.yul\":596:598   */\n  dup6\n    /* \"#utility.yul\":588:594   */\n  dup9\n    /* \"#utility.yul\":584:599   */\n  add\n    /* \"#utility.yul\":580:604   */\n  add\n    /* \"#utility.yul\":577:610   */\n  gt\n    /* \"#utility.yul\":574:576   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":627:632   */\n  dup5\n    /* \"#utility.yul\":620:625   */\n  dup6\n    /* \"#utility.yul\":613:633   */\n  revert\n    /* \"#utility.yul\":574:576   */\ntag_30:\n    /* \"#utility.yul\":653:658   */\n  dup5\n    /* \"#utility.yul\":644:658   */\n  swap2\n  pop\n    /* \"#utility.yul\":667:800   */\ntag_31:\n    /* \"#utility.yul\":681:683   */\n  dup4\n    /* \"#utility.yul\":678:679   */\n  dup3\n    /* \"#utility.yul\":675:684   */\n  lt\n    /* \"#utility.yul\":667:800   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":769:783   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":765:788   */\n  dup4\n  add\n    /* \"#utility.yul\":759:789   */\n  mload\n    /* \"#utility.yul\":738:752   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":734:757   */\n  dup5\n  add\n    /* \"#utility.yul\":727:790   */\n  mstore\n    /* \"#utility.yul\":692:702   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":667:800   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":818:820   */\n  dup4\n    /* \"#utility.yul\":815:816   */\n  dup3\n    /* \"#utility.yul\":812:821   */\n  gt\n    /* \"#utility.yul\":809:811   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":877:882   */\n  dup5\n    /* \"#utility.yul\":872:874   */\n  dup4\n    /* \"#utility.yul\":867:869   */\n  dup6\n    /* \"#utility.yul\":859:865   */\n  dup4\n    /* \"#utility.yul\":855:870   */\n  add\n    /* \"#utility.yul\":851:875   */\n  add\n    /* \"#utility.yul\":844:883   */\n  mstore\n    /* \"#utility.yul\":809:811   */\ntag_34:\n    /* \"#utility.yul\":911:917   */\n  swap7\n    /* \"#utility.yul\":78:923   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1520   */\ntag_3:\n    /* \"#utility.yul\":1027:1033   */\n  0x00\n    /* \"#utility.yul\":1035:1041   */\n  dup1\n    /* \"#utility.yul\":1088:1090   */\n  0x40\n    /* \"#utility.yul\":1076:1085   */\n  dup4\n    /* \"#utility.yul\":1067:1074   */\n  dup6\n    /* \"#utility.yul\":1063:1086   */\n  sub\n    /* \"#utility.yul\":1059:1091   */\n  slt\n    /* \"#utility.yul\":1056:1058   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1109:1115   */\n  dup2\n    /* \"#utility.yul\":1101:1107   */\n  dup3\n    /* \"#utility.yul\":1094:1116   */\n  revert\n    /* \"#utility.yul\":1056:1058   */\ntag_36:\n    /* \"#utility.yul\":1141:1157   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1206:1220   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1203:1205   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1238:1244   */\n  dup4\n    /* \"#utility.yul\":1230:1236   */\n  dup5\n    /* \"#utility.yul\":1223:1245   */\n  revert\n    /* \"#utility.yul\":1203:1205   */\ntag_37:\n    /* \"#utility.yul\":1266:1327   */\n  tag_38\n    /* \"#utility.yul\":1319:1326   */\n  dup7\n    /* \"#utility.yul\":1310:1316   */\n  dup4\n    /* \"#utility.yul\":1299:1308   */\n  dup8\n    /* \"#utility.yul\":1295:1317   */\n  add\n    /* \"#utility.yul\":1266:1327   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1256:1327   */\n  swap4\n  pop\n    /* \"#utility.yul\":1373:1375   */\n  0x20\n    /* \"#utility.yul\":1362:1371   */\n  dup6\n    /* \"#utility.yul\":1358:1376   */\n  add\n    /* \"#utility.yul\":1352:1377   */\n  mload\n    /* \"#utility.yul\":1336:1377   */\n  swap2\n  pop\n    /* \"#utility.yul\":1402:1404   */\n  dup1\n    /* \"#utility.yul\":1392:1400   */\n  dup3\n    /* \"#utility.yul\":1389:1405   */\n  gt\n    /* \"#utility.yul\":1386:1388   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1423:1429   */\n  dup3\n    /* \"#utility.yul\":1415:1421   */\n  dup4\n    /* \"#utility.yul\":1408:1430   */\n  revert\n    /* \"#utility.yul\":1386:1388   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1451:1514   */\n  tag_40\n    /* \"#utility.yul\":1506:1513   */\n  dup6\n    /* \"#utility.yul\":1495:1503   */\n  dup3\n    /* \"#utility.yul\":1484:1493   */\n  dup7\n    /* \"#utility.yul\":1480:1504   */\n  add\n    /* \"#utility.yul\":1451:1514   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1441:1514   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1046:1520   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1525:1905   */\ntag_11:\n    /* \"#utility.yul\":1604:1605   */\n  0x01\n    /* \"#utility.yul\":1600:1612   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1647:1659   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1668:1670   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1722:1726   */\n  0x7f\n    /* \"#utility.yul\":1714:1720   */\n  dup3\n    /* \"#utility.yul\":1710:1727   */\n  and\n    /* \"#utility.yul\":1700:1727   */\n  swap2\n  pop\n    /* \"#utility.yul\":1668:1670   */\ntag_42:\n    /* \"#utility.yul\":1775:1777   */\n  0x20\n    /* \"#utility.yul\":1767:1773   */\n  dup3\n    /* \"#utility.yul\":1764:1778   */\n  lt\n    /* \"#utility.yul\":1744:1762   */\n  dup2\n    /* \"#utility.yul\":1741:1779   */\n  eq\n    /* \"#utility.yul\":1738:1740   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1821:1831   */\n  0x4e487b71\n    /* \"#utility.yul\":1816:1819   */\n  0xe0\n    /* \"#utility.yul\":1812:1832   */\n  shl\n    /* \"#utility.yul\":1809:1810   */\n  0x00\n    /* \"#utility.yul\":1802:1833   */\n  mstore\n    /* \"#utility.yul\":1856:1860   */\n  0x22\n    /* \"#utility.yul\":1853:1854   */\n  0x04\n    /* \"#utility.yul\":1846:1861   */\n  mstore\n    /* \"#utility.yul\":1884:1888   */\n  0x24\n    /* \"#utility.yul\":1881:1882   */\n  0x00\n    /* \"#utility.yul\":1874:1889   */\n  revert\n    /* \"#utility.yul\":1738:1740   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1580:1905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1910:2037   */\ntag_27:\n    /* \"#utility.yul\":1971:1981   */\n  0x4e487b71\n    /* \"#utility.yul\":1966:1969   */\n  0xe0\n    /* \"#utility.yul\":1962:1982   */\n  shl\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1983   */\n  mstore\n    /* \"#utility.yul\":2002:2006   */\n  0x41\n    /* \"#utility.yul\":1999:2000   */\n  0x04\n    /* \"#utility.yul\":1992:2007   */\n  mstore\n    /* \"#utility.yul\":2026:2030   */\n  0x24\n    /* \"#utility.yul\":2023:2024   */\n  0x00\n    /* \"#utility.yul\":2016:2031   */\n  revert\n    /* \"#utility.yul\":1942:2037   */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x18160ddd\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":1468:1482   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1461:1483   */\n      iszero\n        /* \"#utility.yul\":1443:1484   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_19\n        /* \"#utility.yul\":1398:1490   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":5097:5122   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5085:5087   */\n      0x20\n        /* \"#utility.yul\":5070:5088   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_19\n        /* \"#utility.yul\":5052:5128   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_21\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":5275:5311   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"#utility.yul\":5248:5266   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_19\n        /* \"#utility.yul\":5230:5317   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      tag_41\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_27\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_17\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      tag_53\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      tag_57\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_27\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_67\n      jump\t// in\n    tag_68:\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_70\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_69)\n    tag_70:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_71:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_71\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_75\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_75:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_82:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_75\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_89\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4747:4749   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4729:4750   */\n      mstore\n        /* \"#utility.yul\":4786:4788   */\n      0x25\n        /* \"#utility.yul\":4766:4784   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4759:4789   */\n      mstore\n        /* \"#utility.yul\":4825:4859   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4805:4823   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4798:4860   */\n      mstore\n        /* \"#utility.yul\":4896:4903   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4876:4894   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4869:4904   */\n      mstore\n        /* \"#utility.yul\":4921:4940   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_75\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4342:4344   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4324:4345   */\n      mstore\n        /* \"#utility.yul\":4381:4383   */\n      0x24\n        /* \"#utility.yul\":4361:4379   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4354:4384   */\n      mstore\n        /* \"#utility.yul\":4420:4454   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4400:4418   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4393:4455   */\n      mstore\n        /* \"#utility.yul\":4491:4497   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4471:4489   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4464:4498   */\n      mstore\n        /* \"#utility.yul\":4515:4534   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":4314:4540   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2768:2770   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2750:2771   */\n      mstore\n        /* \"#utility.yul\":2807:2809   */\n      0x22\n        /* \"#utility.yul\":2787:2805   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2780:2810   */\n      mstore\n        /* \"#utility.yul\":2846:2880   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2826:2844   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2819:2881   */\n      mstore\n        /* \"#utility.yul\":2917:2921   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2897:2915   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2890:2922   */\n      mstore\n        /* \"#utility.yul\":2939:2958   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":2740:2964   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5097:5122   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":5070:5088   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10977:10994  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3171:3173   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3153:3174   */\n      mstore\n        /* \"#utility.yul\":3210:3212   */\n      0x1d\n        /* \"#utility.yul\":3190:3208   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3183:3213   */\n      mstore\n        /* \"#utility.yul\":3249:3280   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3229:3247   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3222:3281   */\n      mstore\n        /* \"#utility.yul\":3298:3316   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_102\n        /* \"#utility.yul\":3143:3322   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3936:3938   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3918:3939   */\n      mstore\n        /* \"#utility.yul\":3975:3977   */\n      0x25\n        /* \"#utility.yul\":3955:3973   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3948:3978   */\n      mstore\n        /* \"#utility.yul\":4014:4048   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3994:4012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3987:4049   */\n      mstore\n        /* \"#utility.yul\":4085:4092   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4065:4083   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4058:4093   */\n      mstore\n        /* \"#utility.yul\":4110:4129   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":3908:4135   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2364:2366   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2346:2367   */\n      mstore\n        /* \"#utility.yul\":2403:2405   */\n      0x23\n        /* \"#utility.yul\":2383:2401   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2376:2406   */\n      mstore\n        /* \"#utility.yul\":2442:2476   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2422:2440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2415:2477   */\n      mstore\n        /* \"#utility.yul\":2513:2518   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2493:2511   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2486:2519   */\n      mstore\n        /* \"#utility.yul\":2536:2555   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":2336:2561   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3529:3531   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3511:3532   */\n      mstore\n        /* \"#utility.yul\":3568:3570   */\n      0x26\n        /* \"#utility.yul\":3548:3566   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3541:3571   */\n      mstore\n        /* \"#utility.yul\":3607:3641   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3587:3605   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3580:3642   */\n      mstore\n        /* \"#utility.yul\":3678:3686   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3658:3676   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3651:3687   */\n      mstore\n        /* \"#utility.yul\":3704:3723   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_102\n        /* \"#utility.yul\":3501:3729   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_137\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_90\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_138\n      swap2\n        /* \"#utility.yul\":5097:5122   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5085:5087   */\n      0x20\n        /* \"#utility.yul\":5070:5088   */\n      add\n      swap1\n        /* \"#utility.yul\":5052:5128   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:210   */\n    tag_144:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_146:\n        /* \"#utility.yul\":63:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:411   */\n    tag_46:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:297   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":348:354   */\n      dup1\n        /* \"#utility.yul\":340:346   */\n      dup2\n        /* \"#utility.yul\":333:355   */\n      revert\n        /* \"#utility.yul\":295:297   */\n    tag_148:\n        /* \"#utility.yul\":376:405   */\n      tag_149\n        /* \"#utility.yul\":395:404   */\n      dup3\n        /* \"#utility.yul\":376:405   */\n      tag_144\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":366:405   */\n      swap4\n        /* \"#utility.yul\":285:411   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":416:686   */\n    tag_62:\n        /* \"#utility.yul\":484:490   */\n      0x00\n        /* \"#utility.yul\":492:498   */\n      dup1\n        /* \"#utility.yul\":545:547   */\n      0x40\n        /* \"#utility.yul\":533:542   */\n      dup4\n        /* \"#utility.yul\":524:531   */\n      dup6\n        /* \"#utility.yul\":520:543   */\n      sub\n        /* \"#utility.yul\":516:548   */\n      slt\n        /* \"#utility.yul\":513:515   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":566:572   */\n      dup1\n        /* \"#utility.yul\":558:564   */\n      dup2\n        /* \"#utility.yul\":551:573   */\n      revert\n        /* \"#utility.yul\":513:515   */\n    tag_151:\n        /* \"#utility.yul\":594:623   */\n      tag_152\n        /* \"#utility.yul\":613:622   */\n      dup4\n        /* \"#utility.yul\":594:623   */\n      tag_144\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":584:623   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:680   */\n      tag_153\n        /* \"#utility.yul\":676:678   */\n      0x20\n        /* \"#utility.yul\":665:674   */\n      dup5\n        /* \"#utility.yul\":661:679   */\n      add\n        /* \"#utility.yul\":642:680   */\n      tag_144\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":632:680   */\n      swap1\n      pop\n        /* \"#utility.yul\":503:686   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1029   */\n    tag_33:\n        /* \"#utility.yul\":768:774   */\n      0x00\n        /* \"#utility.yul\":776:782   */\n      dup1\n        /* \"#utility.yul\":784:790   */\n      0x00\n        /* \"#utility.yul\":837:839   */\n      0x60\n        /* \"#utility.yul\":825:834   */\n      dup5\n        /* \"#utility.yul\":816:823   */\n      dup7\n        /* \"#utility.yul\":812:835   */\n      sub\n        /* \"#utility.yul\":808:840   */\n      slt\n        /* \"#utility.yul\":805:807   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":858:864   */\n      dup1\n        /* \"#utility.yul\":850:856   */\n      dup2\n        /* \"#utility.yul\":843:865   */\n      revert\n        /* \"#utility.yul\":805:807   */\n    tag_155:\n        /* \"#utility.yul\":886:915   */\n      tag_156\n        /* \"#utility.yul\":905:914   */\n      dup5\n        /* \"#utility.yul\":886:915   */\n      tag_144\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":876:915   */\n      swap3\n      pop\n        /* \"#utility.yul\":934:972   */\n      tag_157\n        /* \"#utility.yul\":968:970   */\n      0x20\n        /* \"#utility.yul\":957:966   */\n      dup6\n        /* \"#utility.yul\":953:971   */\n      add\n        /* \"#utility.yul\":934:972   */\n      tag_144\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":924:972   */\n      swap2\n      pop\n        /* \"#utility.yul\":1019:1021   */\n      0x40\n        /* \"#utility.yul\":1008:1017   */\n      dup5\n        /* \"#utility.yul\":1004:1022   */\n      add\n        /* \"#utility.yul\":991:1023   */\n      calldataload\n        /* \"#utility.yul\":981:1023   */\n      swap1\n      pop\n        /* \"#utility.yul\":795:1029   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1034:1298   */\n    tag_23:\n        /* \"#utility.yul\":1102:1108   */\n      0x00\n        /* \"#utility.yul\":1110:1116   */\n      dup1\n        /* \"#utility.yul\":1163:1165   */\n      0x40\n        /* \"#utility.yul\":1151:1160   */\n      dup4\n        /* \"#utility.yul\":1142:1149   */\n      dup6\n        /* \"#utility.yul\":1138:1161   */\n      sub\n        /* \"#utility.yul\":1134:1166   */\n      slt\n        /* \"#utility.yul\":1131:1133   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1184:1190   */\n      dup2\n        /* \"#utility.yul\":1176:1182   */\n      dup3\n        /* \"#utility.yul\":1169:1191   */\n      revert\n        /* \"#utility.yul\":1131:1133   */\n    tag_159:\n        /* \"#utility.yul\":1212:1241   */\n      tag_160\n        /* \"#utility.yul\":1231:1240   */\n      dup4\n        /* \"#utility.yul\":1212:1241   */\n      tag_144\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1202:1241   */\n      swap5\n        /* \"#utility.yul\":1288:1290   */\n      0x20\n        /* \"#utility.yul\":1273:1291   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1260:1292   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1121:1298   */\n      jump\t// out\n        /* \"#utility.yul\":1495:2157   */\n    tag_20:\n        /* \"#utility.yul\":1607:1611   */\n      0x00\n        /* \"#utility.yul\":1636:1638   */\n      0x20\n        /* \"#utility.yul\":1665:1667   */\n      dup1\n        /* \"#utility.yul\":1654:1663   */\n      dup4\n        /* \"#utility.yul\":1647:1668   */\n      mstore\n        /* \"#utility.yul\":1697:1703   */\n      dup4\n        /* \"#utility.yul\":1691:1704   */\n      mload\n        /* \"#utility.yul\":1740:1746   */\n      dup1\n        /* \"#utility.yul\":1735:1737   */\n      dup3\n        /* \"#utility.yul\":1724:1733   */\n      dup6\n        /* \"#utility.yul\":1720:1738   */\n      add\n        /* \"#utility.yul\":1713:1747   */\n      mstore\n        /* \"#utility.yul\":1765:1769   */\n      dup3\n        /* \"#utility.yul\":1778:1918   */\n    tag_163:\n        /* \"#utility.yul\":1792:1798   */\n      dup2\n        /* \"#utility.yul\":1789:1790   */\n      dup2\n        /* \"#utility.yul\":1786:1799   */\n      lt\n        /* \"#utility.yul\":1778:1918   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1887:1901   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1883:1906   */\n      dup4\n      add\n        /* \"#utility.yul\":1877:1907   */\n      mload\n        /* \"#utility.yul\":1853:1870   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1872:1874   */\n      0x40\n        /* \"#utility.yul\":1849:1875   */\n      add\n        /* \"#utility.yul\":1842:1908   */\n      mstore\n        /* \"#utility.yul\":1807:1817   */\n      dup3\n      add\n        /* \"#utility.yul\":1778:1918   */\n      jump(tag_163)\n    tag_165:\n        /* \"#utility.yul\":1936:1942   */\n      dup2\n        /* \"#utility.yul\":1933:1934   */\n      dup2\n        /* \"#utility.yul\":1930:1943   */\n      gt\n        /* \"#utility.yul\":1927:1929   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2006:2010   */\n      dup4\n        /* \"#utility.yul\":2001:2003   */\n      0x40\n        /* \"#utility.yul\":1992:1998   */\n      dup4\n        /* \"#utility.yul\":1981:1990   */\n      dup8\n        /* \"#utility.yul\":1977:1999   */\n      add\n        /* \"#utility.yul\":1973:2004   */\n      add\n        /* \"#utility.yul\":1966:2011   */\n      mstore\n        /* \"#utility.yul\":1927:1929   */\n    tag_166:\n      pop\n        /* \"#utility.yul\":2073:2075   */\n      0x1f\n        /* \"#utility.yul\":2061:2076   */\n      add\n        /* \"#utility.yul\":2078:2144   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":2057:2145   */\n      and\n        /* \"#utility.yul\":2042:2146   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2148:2150   */\n      0x40\n        /* \"#utility.yul\":2038:2151   */\n      add\n      swap4\n        /* \"#utility.yul\":1616:2157   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5322:5608   */\n    tag_90:\n        /* \"#utility.yul\":5362:5365   */\n      0x00\n        /* \"#utility.yul\":5393:5394   */\n      dup3\n        /* \"#utility.yul\":5389:5395   */\n      not\n        /* \"#utility.yul\":5386:5387   */\n      dup3\n        /* \"#utility.yul\":5383:5396   */\n      gt\n        /* \"#utility.yul\":5380:5382   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":5431:5508   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5426:5429   */\n      dup2\n        /* \"#utility.yul\":5419:5509   */\n      mstore\n        /* \"#utility.yul\":5532:5536   */\n      0x11\n        /* \"#utility.yul\":5529:5530   */\n      0x04\n        /* \"#utility.yul\":5522:5537   */\n      mstore\n        /* \"#utility.yul\":5562:5566   */\n      0x24\n        /* \"#utility.yul\":5557:5560   */\n      dup2\n        /* \"#utility.yul\":5550:5567   */\n      revert\n        /* \"#utility.yul\":5380:5382   */\n    tag_177:\n      pop\n        /* \"#utility.yul\":5593:5602   */\n      add\n      swap1\n        /* \"#utility.yul\":5370:5608   */\n      jump\t// out\n        /* \"#utility.yul\":5613:6050   */\n    tag_67:\n        /* \"#utility.yul\":5692:5693   */\n      0x01\n        /* \"#utility.yul\":5688:5700   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5735:5747   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5756:5758   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":5810:5814   */\n      0x7f\n        /* \"#utility.yul\":5802:5808   */\n      dup3\n        /* \"#utility.yul\":5798:5815   */\n      and\n        /* \"#utility.yul\":5788:5815   */\n      swap2\n      pop\n        /* \"#utility.yul\":5756:5758   */\n    tag_179:\n        /* \"#utility.yul\":5863:5865   */\n      0x20\n        /* \"#utility.yul\":5855:5861   */\n      dup3\n        /* \"#utility.yul\":5852:5866   */\n      lt\n        /* \"#utility.yul\":5832:5850   */\n      dup2\n        /* \"#utility.yul\":5829:5867   */\n      eq\n        /* \"#utility.yul\":5826:5828   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":5900:5977   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5897:5898   */\n      0x00\n        /* \"#utility.yul\":5890:5978   */\n      mstore\n        /* \"#utility.yul\":6001:6005   */\n      0x22\n        /* \"#utility.yul\":5998:5999   */\n      0x04\n        /* \"#utility.yul\":5991:6006   */\n      mstore\n        /* \"#utility.yul\":6029:6033   */\n      0x24\n        /* \"#utility.yul\":6026:6027   */\n      0x00\n        /* \"#utility.yul\":6019:6034   */\n      revert\n        /* \"#utility.yul\":5826:5828   */\n    tag_180:\n      pop\n        /* \"#utility.yul\":5668:6050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d55dd051437ff91a0ad7f6b9e9cf268071ca9c4fceb03a02ebd0eb98e42bc1f364736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2039:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:845:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:24:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "136:5:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "143:5:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:20:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:20:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:5"
															},
															"nodeType": "YulIf",
															"src": "88:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "160:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "176:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "170:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "170:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "164:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "192:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "210:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "214:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "206:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "206:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "218:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "202:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "196:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "243:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "245:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "245:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "245:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "235:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "239:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "232:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:10:5"
															},
															"nodeType": "YulIf",
															"src": "229:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "274:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "284:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "284:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "278:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "300:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "314:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "314:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "304:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "332:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "354:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "378:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "382:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "374:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "374:13:5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "389:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "370:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "370:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "394:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "366:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "366:31:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "399:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "362:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "350:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "336:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "464:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "421:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "433:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "441:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "453:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "438:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "438:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "415:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "415:46:5"
															},
															"nodeType": "YulIf",
															"src": "412:2:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "504:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "531:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "539:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "524:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "524:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "524:18:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "551:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "561:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "555:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "611:24:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "620:5:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "627:5:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "613:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "613:20:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "613:20:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "588:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "596:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "584:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "584:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "601:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "580:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "580:24:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "606:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "577:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:33:5"
															},
															"nodeType": "YulIf",
															"src": "574:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "644:14:5",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "653:5:5"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "648:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "713:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "742:6:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "750:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "738:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "738:14:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "754:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "734:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "734:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "773:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "781:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "769:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "769:14:5"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "785:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "765:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "765:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "759:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "759:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "727:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "727:63:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "727:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "678:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "681:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "675:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "685:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "687:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "696:1:5"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "699:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "692:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "687:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "671:3:5",
																"statements": []
															},
															"src": "667:133:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "830:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "859:6:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "867:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "855:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "855:15:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "872:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "851:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "851:24:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "877:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "844:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "844:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "844:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "815:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "818:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "812:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "812:9:5"
															},
															"nodeType": "YulIf",
															"src": "809:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "902:15:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "911:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "902:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:5",
														"type": ""
													}
												],
												"src": "14:909:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:474:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1092:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1101:6:5"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1109:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1094:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1094:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1067:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1076:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1063:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1063:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1088:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:32:5"
															},
															"nodeType": "YulIf",
															"src": "1056:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1127:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1147:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1141:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1131:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1166:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1184:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1188:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1180:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1192:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1176:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1170:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1221:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1230:6:5"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1238:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1223:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1209:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1217:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1206:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:14:5"
															},
															"nodeType": "YulIf",
															"src": "1203:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1299:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1310:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1295:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1319:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1266:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1336:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1362:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1373:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1352:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1340:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1406:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1415:6:5"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1423:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1408:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1408:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1408:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1392:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1402:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1389:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:16:5"
															},
															"nodeType": "YulIf",
															"src": "1386:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1441:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1484:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1495:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1480:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1480:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1506:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1451:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1004:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1015:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1027:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1035:6:5",
														"type": ""
													}
												],
												"src": "928:592:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1607:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1621:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1651:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1625:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1698:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1700:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1714:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1722:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1710:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1710:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1700:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1678:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:26:5"
															},
															"nodeType": "YulIf",
															"src": "1668:2:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1788:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1809:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1816:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1821:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1802:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1802:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1802:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1853:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1856:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1846:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1846:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1846:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1881:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1744:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1767:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1775:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1764:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1741:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1741:38:5"
															},
															"nodeType": "YulIf",
															"src": "1738:2:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1560:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1569:6:5",
														"type": ""
													}
												],
												"src": "1525:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1942:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1966:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1971:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1962:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1952:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1952:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1992:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1992:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2023:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2016:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1910:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000c7438038062000c748339810160408190526200003491620001c1565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6109e9806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461017f57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101e6565b6040516100e391906108b1565b60405180910390f35b6100ff6100fa366004610888565b610278565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f36600461084d565b610290565b604051601281526020016100e3565b6100ff610151366004610888565b6102b4565b6101136101643660046107fa565b6001600160a01b031660009081526020819052604090205490565b6100d66102f3565b6100ff610195366004610888565b610302565b6100ff6101a8366004610888565b6103b1565b6101136101bb36600461081b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f59061095f565b80601f01602080910402602001604051908101604052809291908181526020018280546102219061095f565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000336102868185856103bf565b5060019392505050565b60003361029e858285610517565b6102a98585856105c7565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061028690829086906102ee908790610922565b6103bf565b6060600480546101f59061095f565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102a982868684036103bf565b6000336102868185856105c7565b6001600160a01b03831661043a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166104b65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105c157818110156105b45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161039b565b6105c184848484036103bf565b50505050565b6001600160a01b0383166106435760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166106bf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0383166000908152602081905260409020548181101561074e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610785908490610922565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107d191815260200190565b60405180910390a36105c1565b80356001600160a01b03811681146107f557600080fd5b919050565b60006020828403121561080b578081fd5b610814826107de565b9392505050565b6000806040838503121561082d578081fd5b610836836107de565b9150610844602084016107de565b90509250929050565b600080600060608486031215610861578081fd5b61086a846107de565b9250610878602085016107de565b9150604084013590509250925092565b6000806040838503121561089a578182fd5b6108a3836107de565b946020939093013593505050565b6000602080835283518082850152825b818110156108dd578581018301518582016040015282016108c1565b818111156108ee5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000821982111561095a577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b600181811c9082168061097357607f821691505b602082108114156109ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220d55dd051437ff91a0ad7f6b9e9cf268071ca9c4fceb03a02ebd0eb98e42bc1f364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC74 CODESIZE SUB DUP1 PUSH3 0xC74 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C1 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x27B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x228 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x11F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH3 0x13C PUSH3 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x167 JUMPI PUSH3 0x167 PUSH3 0x265 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x183 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A6 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x187 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1B7 JUMPI DUP5 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1EB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x1F9 DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x20F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x21E DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x23D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x25F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9E9 DUP1 PUSH3 0x28B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x84D JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x95F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x221 SWAP1 PUSH2 0x95F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x243 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x251 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x286 DUP2 DUP6 DUP6 PUSH2 0x3BF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x29E DUP6 DUP3 DUP6 PUSH2 0x517 JUMP JUMPDEST PUSH2 0x2A9 DUP6 DUP6 DUP6 PUSH2 0x5C7 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x286 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2EE SWAP1 DUP8 SWAP1 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x95F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x286 DUP2 DUP6 DUP6 PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x5C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x5C1 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x785 SWAP1 DUP5 SWAP1 PUSH2 0x922 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5C1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80B JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x814 DUP3 PUSH2 0x7DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x82D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x836 DUP4 PUSH2 0x7DE JUMP JUMPDEST SWAP2 POP PUSH2 0x844 PUSH1 0x20 DUP5 ADD PUSH2 0x7DE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x861 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x86A DUP5 PUSH2 0x7DE JUMP JUMPDEST SWAP3 POP PUSH2 0x878 PUSH1 0x20 DUP6 ADD PUSH2 0x7DE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x89A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x8A3 DUP4 PUSH2 0x7DE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8DD JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8C1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x8EE JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x95A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x973 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x9AD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0x5D 0xD0 MLOAD NUMBER PUSH32 0xF91A0AD7F6B9E9CF268071CA9C4FCEB03A02EBD0EB98E42BC1F364736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "1403:11214:0:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:0;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11214;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11214:0;;;-1:-1:-1;1403:11214:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:5;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:5;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:5;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:5:o;928:592::-;1027:6;1035;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1109:6;1101;1094:22;1056:2;1141:16;;-1:-1:-1;;;;;1206:14:5;;;1203:2;;;1238:6;1230;1223:22;1203:2;1266:61;1319:7;1310:6;1299:9;1295:22;1266:61;:::i;:::-;1256:71;;1373:2;1362:9;1358:18;1352:25;1336:41;;1402:2;1392:8;1389:16;1386:2;;;1423:6;1415;1408:22;1386:2;;1451:63;1506:7;1495:8;1484:9;1480:24;1451:63;:::i;:::-;1441:73;;;1046:474;;;;;:::o;1525:380::-;1604:1;1600:12;;;;1647;;;1668:2;;1722:4;1714:6;1710:17;1700:27;;1668:2;1775;1767:6;1764:14;1744:18;1741:38;1738:2;;;1821:10;1816:3;1812:20;1809:1;1802:31;1856:4;1853:1;1846:15;1884:4;1881:1;1874:15;1738:2;;1580:325;;;:::o;1910:127::-;1971:10;1966:3;1962:20;1959:1;1952:31;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;1942:95;1403:11214:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6052:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:5"
															},
															"nodeType": "YulIf",
															"src": "111:2:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:196:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:126:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "340:6:5"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "348:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:5"
															},
															"nodeType": "YulIf",
															"src": "295:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "366:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "395:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "376:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "366:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:5",
														"type": ""
													}
												],
												"src": "215:196:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:183:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "549:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "558:6:5"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "566:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "524:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "533:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "520:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "545:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:32:5"
															},
															"nodeType": "YulIf",
															"src": "513:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "584:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "613:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "594:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "584:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "632:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "665:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "676:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "642:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "642:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "632:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "461:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "472:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "484:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "492:6:5",
														"type": ""
													}
												],
												"src": "416:270:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:234:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "841:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "850:6:5"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "858:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "843:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "843:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "816:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "825:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "812:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "812:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "837:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "808:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:32:5"
															},
															"nodeType": "YulIf",
															"src": "805:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "876:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "905:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "886:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "924:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "957:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "968:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "953:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "953:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "934:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "924:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "981:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1008:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1019:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1004:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "991:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "991:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "981:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "745:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "756:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "768:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "776:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "784:6:5",
														"type": ""
													}
												],
												"src": "691:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1121:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1167:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1176:6:5"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1169:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1169:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1169:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1142:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1151:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1138:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1138:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1163:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1134:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:32:5"
															},
															"nodeType": "YulIf",
															"src": "1131:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1202:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1231:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1212:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1212:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1202:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1277:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1288:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1273:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1273:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1260:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1260:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1250:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1079:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1090:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1102:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1110:6:5",
														"type": ""
													}
												],
												"src": "1034:264:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1450:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1475:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1468:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1468:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1461:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1461:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1443:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1443:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1367:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:5",
														"type": ""
													}
												],
												"src": "1303:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1616:541:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1626:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1636:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1630:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1654:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1665:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1647:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1677:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1697:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1691:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1691:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1681:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1735:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1720:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1720:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1740:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1713:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1713:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1713:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1756:13:5",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1765:4:5"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1760:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1828:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1857:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1868:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1853:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1853:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1872:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1849:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1849:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1891:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1899:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1887:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1887:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1903:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1883:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1883:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1877:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1877:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1842:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1842:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1842:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1789:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1792:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1786:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1786:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1800:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1802:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1811:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1814:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1807:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1807:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1802:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1782:3:5",
																"statements": []
															},
															"src": "1778:140:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1952:69:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1981:9:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1992:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1977:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1977:22:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2001:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1973:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:31:5"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "2006:4:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1966:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1966:45:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1966:45:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1933:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1936:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1930:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:13:5"
															},
															"nodeType": "YulIf",
															"src": "1927:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2030:121:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2046:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2065:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2073:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2061:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2061:15:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2078:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2057:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2057:88:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2042:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2042:104:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2148:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2038:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2038:113:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2030:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1585:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1596:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1607:4:5",
														"type": ""
													}
												],
												"src": "1495:662:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2336:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2353:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2364:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2346:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2387:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2398:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2383:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2383:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2403:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2376:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2376:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2426:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2437:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2422:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2422:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2442:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2415:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2497:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2508:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2493:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2493:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2513:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2486:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2486:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2486:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2528:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2540:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2551:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2536:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2536:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2528:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2313:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2327:4:5",
														"type": ""
													}
												],
												"src": "2162:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2740:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2757:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2768:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2750:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2750:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2750:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2791:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2802:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2807:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2780:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2780:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2830:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2841:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2826:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2826:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2846:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2819:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2819:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2901:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2912:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2897:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2897:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2917:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2890:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2890:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2890:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2931:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2943:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2939:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2931:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2717:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2731:4:5",
														"type": ""
													}
												],
												"src": "2566:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3143:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3160:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3171:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3153:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3153:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3205:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3190:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3183:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3233:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3244:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3229:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3249:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3222:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3222:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3222:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3290:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3302:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3313:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3298:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3298:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3290:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3120:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3134:4:5",
														"type": ""
													}
												],
												"src": "2969:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3501:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3518:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3529:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3511:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3511:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3552:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3563:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3548:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3548:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3568:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3541:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3541:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3591:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3602:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3587:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3587:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3607:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3580:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3580:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3662:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3673:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3658:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3658:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3678:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3651:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3696:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3708:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3719:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3704:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3704:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3696:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3478:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3492:4:5",
														"type": ""
													}
												],
												"src": "3327:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3908:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3925:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3936:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3918:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3918:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3959:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3970:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3955:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3955:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3975:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3948:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3948:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3948:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4009:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3994:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3994:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4014:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3987:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3987:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4069:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4065:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4065:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4085:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4058:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4058:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4058:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4102:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4114:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4125:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4110:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4110:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4102:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3885:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3899:4:5",
														"type": ""
													}
												],
												"src": "3734:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4314:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4331:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4342:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4324:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4376:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4361:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4381:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4354:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4354:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4404:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4415:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4400:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4400:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4420:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4393:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4393:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4393:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4486:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4471:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4471:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4491:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4464:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4464:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4464:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4507:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4519:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4530:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4515:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4515:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4507:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4291:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4305:4:5",
														"type": ""
													}
												],
												"src": "4140:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4719:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4736:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4747:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4729:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4729:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4729:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4770:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4781:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4766:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4766:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4786:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4759:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4759:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4759:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4809:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4820:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4805:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4805:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4825:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4798:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4798:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4880:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4891:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4876:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4896:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4869:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4869:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4913:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4925:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4936:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4921:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4921:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4913:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4696:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4710:4:5",
														"type": ""
													}
												],
												"src": "4545:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5052:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5062:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5074:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5085:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5070:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5062:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5104:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5115:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5097:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5097:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5021:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5032:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5043:4:5",
														"type": ""
													}
												],
												"src": "4951:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5230:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5240:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5252:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5263:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5248:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5248:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5240:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5282:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5297:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5305:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5293:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5293:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5275:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5275:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5275:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5199:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5210:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5221:4:5",
														"type": ""
													}
												],
												"src": "5133:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5370:238:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5405:172:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5426:3:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5431:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5419:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5419:90:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5419:90:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5529:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5532:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5522:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5522:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5522:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5557:3:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5562:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5550:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5550:17:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5550:17:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5386:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5393:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5389:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5389:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5383:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5383:13:5"
															},
															"nodeType": "YulIf",
															"src": "5380:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5586:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5597:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5600:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5586:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5353:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5356:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5362:3:5",
														"type": ""
													}
												],
												"src": "5322:286:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5668:382:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5678:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5692:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5695:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5688:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5678:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5709:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5739:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5745:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5735:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5735:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5713:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5786:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5788:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5802:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5810:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5798:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5798:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5788:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5766:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5759:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5759:26:5"
															},
															"nodeType": "YulIf",
															"src": "5756:2:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5876:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5897:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5900:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5890:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5890:88:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5890:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5998:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6001:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5991:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5991:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5991:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6026:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6029:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6019:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6019:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6019:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5832:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5855:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5863:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5852:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5852:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5829:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5829:38:5"
															},
															"nodeType": "YulIf",
															"src": "5826:2:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5648:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5657:6:5",
														"type": ""
													}
												],
												"src": "5613:437:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461017f57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101e6565b6040516100e391906108b1565b60405180910390f35b6100ff6100fa366004610888565b610278565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f36600461084d565b610290565b604051601281526020016100e3565b6100ff610151366004610888565b6102b4565b6101136101643660046107fa565b6001600160a01b031660009081526020819052604090205490565b6100d66102f3565b6100ff610195366004610888565b610302565b6100ff6101a8366004610888565b6103b1565b6101136101bb36600461081b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f59061095f565b80601f01602080910402602001604051908101604052809291908181526020018280546102219061095f565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000336102868185856103bf565b5060019392505050565b60003361029e858285610517565b6102a98585856105c7565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061028690829086906102ee908790610922565b6103bf565b6060600480546101f59061095f565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102a982868684036103bf565b6000336102868185856105c7565b6001600160a01b03831661043a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166104b65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105c157818110156105b45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161039b565b6105c184848484036103bf565b50505050565b6001600160a01b0383166106435760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166106bf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0383166000908152602081905260409020548181101561074e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610785908490610922565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107d191815260200190565b60405180910390a36105c1565b80356001600160a01b03811681146107f557600080fd5b919050565b60006020828403121561080b578081fd5b610814826107de565b9392505050565b6000806040838503121561082d578081fd5b610836836107de565b9150610844602084016107de565b90509250929050565b600080600060608486031215610861578081fd5b61086a846107de565b9250610878602085016107de565b9150604084013590509250925092565b6000806040838503121561089a578182fd5b6108a3836107de565b946020939093013593505050565b6000602080835283518082850152825b818110156108dd578581018301518582016040015282016108c1565b818111156108ee5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000821982111561095a577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b600181811c9082168061097357607f821691505b602082108114156109ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220d55dd051437ff91a0ad7f6b9e9cf268071ca9c4fceb03a02ebd0eb98e42bc1f364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x84D JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x95F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x221 SWAP1 PUSH2 0x95F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x243 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x251 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x286 DUP2 DUP6 DUP6 PUSH2 0x3BF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x29E DUP6 DUP3 DUP6 PUSH2 0x517 JUMP JUMPDEST PUSH2 0x2A9 DUP6 DUP6 DUP6 PUSH2 0x5C7 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x286 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2EE SWAP1 DUP8 SWAP1 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x95F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x286 DUP2 DUP6 DUP6 PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x5C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x5C1 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x785 SWAP1 DUP5 SWAP1 PUSH2 0x922 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5C1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80B JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x814 DUP3 PUSH2 0x7DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x82D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x836 DUP4 PUSH2 0x7DE JUMP JUMPDEST SWAP2 POP PUSH2 0x844 PUSH1 0x20 DUP5 ADD PUSH2 0x7DE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x861 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x86A DUP5 PUSH2 0x7DE JUMP JUMPDEST SWAP3 POP PUSH2 0x878 PUSH1 0x20 DUP6 ADD PUSH2 0x7DE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x89A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x8A3 DUP4 PUSH2 0x7DE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8DD JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8C1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x8EE JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x95A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x973 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x9AD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0x5D 0xD0 MLOAD NUMBER PUSH32 0xF91A0AD7F6B9E9CF268071CA9C4FCEB03A02EBD0EB98E42BC1F364736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "1403:11214:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1468:14:5;;1461:22;1443:41;;1431:2;1416:18;4433:197:0;1398:92:5;3244:106:0;3331:12;;3244:106;;;5097:25:5;;;5085:2;5070:18;3244:106:0;5052:76:5;5192:286:0;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;5275:36:5;;5263:2;5248:18;3093:91:0;5230:87:5;5873:234:0;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:0;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:0;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:3;4570:32:0;719:10:3;4586:7:0;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:0;;4433:197;-1:-1:-1;;;4433:197:0:o;5192:286::-;5319:4;719:10:3;5375:38:0;5391:4;719:10:3;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;5873:234::-;719:10:3;5961:4:0;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:0;;;;;;;;;;5961:4;;719:10:3;6015:64:0;;719:10:3;;4091:27:0;;6040:38;;6068:10;;6040:38;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;719:10:3;6687:4:0;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:0;;;;;;;;;;6687:4;;719:10:3;6831:15:0;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:0;;4747:2:5;6803:85:0;;;4729:21:5;4786:2;4766:18;;;4759:30;4825:34;4805:18;;;4798:62;4896:7;4876:18;;;4869:35;4921:19;;6803:85:0;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:3;3862:28:0;719:10:3;3879:2:0;3883:6;3862:9;:28::i;10110:370::-;-1:-1:-1;;;;;10241:19:0;;10233:68;;;;-1:-1:-1;;;10233:68:0;;4342:2:5;10233:68:0;;;4324:21:5;4381:2;4361:18;;;4354:30;4420:34;4400:18;;;4393:62;4491:6;4471:18;;;4464:34;4515:19;;10233:68:0;4314:226:5;10233:68:0;-1:-1:-1;;;;;10319:21:0;;10311:68;;;;-1:-1:-1;;;10311:68:0;;2768:2:5;10311:68:0;;;2750:21:5;2807:2;2787:18;;;2780:30;2846:34;2826:18;;;2819:62;2917:4;2897:18;;;2890:32;2939:19;;10311:68:0;2740:224:5;10311:68:0;-1:-1:-1;;;;;10390:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;5097:25:5;;;10441:32:0;;5070:18:5;10441:32:0;;;;;;;10110:370;;;:::o;10761:441::-;-1:-1:-1;;;;;4091:18:0;;;10891:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10977:17;10957:37;;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:0;;3171:2:5;11010:68:0;;;3153:21:5;3210:2;3190:18;;;3183:30;3249:31;3229:18;;;3222:59;3298:18;;11010:68:0;3143:179:5;11010:68:0;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10761:441;;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:0;;7593:68;;;;-1:-1:-1;;;7593:68:0;;3936:2:5;7593:68:0;;;3918:21:5;3975:2;3955:18;;;3948:30;4014:34;3994:18;;;3987:62;4085:7;4065:18;;;4058:35;4110:19;;7593:68:0;3908:227:5;7593:68:0;-1:-1:-1;;;;;7679:16:0;;7671:64;;;;-1:-1:-1;;;7671:64:0;;2364:2:5;7671:64:0;;;2346:21:5;2403:2;2383:18;;;2376:30;2442:34;2422:18;;;2415:62;2513:5;2493:18;;;2486:33;2536:19;;7671:64:0;2336:225:5;7671:64:0;-1:-1:-1;;;;;7817:15:0;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:0;;3529:2:5;7842:72:0;;;3511:21:5;3568:2;3548:18;;;3541:30;3607:34;3587:18;;;3580:62;3678:8;3658:18;;;3651:36;3704:19;;7842:72:0;3501:228:5;7842:72:0;-1:-1:-1;;;;;7948:15:0;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:0;8054:4;-1:-1:-1;;;;;8045:26:0;;8064:6;8045:26;;;;5097:25:5;;5085:2;5070:18;;5052:76;8045:26:0;;;;;;;;8082:37;11786:121;14:196:5;82:20;;-1:-1:-1;;;;;131:54:5;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:196::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;:::-;366:39;285:126;-1:-1:-1;;;285:126:5:o;416:270::-;484:6;492;545:2;533:9;524:7;520:23;516:32;513:2;;;566:6;558;551:22;513:2;594:29;613:9;594:29;:::i;:::-;584:39;;642:38;676:2;665:9;661:18;642:38;:::i;:::-;632:48;;503:183;;;;;:::o;691:338::-;768:6;776;784;837:2;825:9;816:7;812:23;808:32;805:2;;;858:6;850;843:22;805:2;886:29;905:9;886:29;:::i;:::-;876:39;;934:38;968:2;957:9;953:18;934:38;:::i;:::-;924:48;;1019:2;1008:9;1004:18;991:32;981:42;;795:234;;;;;:::o;1034:264::-;1102:6;1110;1163:2;1151:9;1142:7;1138:23;1134:32;1131:2;;;1184:6;1176;1169:22;1131:2;1212:29;1231:9;1212:29;:::i;:::-;1202:39;1288:2;1273:18;;;;1260:32;;-1:-1:-1;;;1121:177:5:o;1495:662::-;1607:4;1636:2;1665;1654:9;1647:21;1697:6;1691:13;1740:6;1735:2;1724:9;1720:18;1713:34;1765:4;1778:140;1792:6;1789:1;1786:13;1778:140;;;1887:14;;;1883:23;;1877:30;1853:17;;;1872:2;1849:26;1842:66;1807:10;;1778:140;;;1936:6;1933:1;1930:13;1927:2;;;2006:4;2001:2;1992:6;1981:9;1977:22;1973:31;1966:45;1927:2;-1:-1:-1;2073:2:5;2061:15;2078:66;2057:88;2042:104;;;;2148:2;2038:113;;1616:541;-1:-1:-1;;;1616:541:5:o;5322:286::-;5362:3;5393:1;5389:6;5386:1;5383:13;5380:2;;;5431:77;5426:3;5419:90;5532:4;5529:1;5522:15;5562:4;5557:3;5550:17;5380:2;-1:-1:-1;5593:9:5;;5370:238::o;5613:437::-;5692:1;5688:12;;;;5735;;;5756:2;;5810:4;5802:6;5798:17;5788:27;;5756:2;5863;5855:6;5852:14;5832:18;5829:38;5826:2;;;5900:77;5897:1;5890:88;6001:4;5998:1;5991:15;6029:4;6026:1;6019:15;5826:2;;5668:382;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "507400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22547",
								"balanceOf(address)": "1285",
								"decimals()": "244",
								"decreaseAllowance(address,uint256)": "23522",
								"increaseAllowance(address,uint256)": "23568",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1004",
								"transfer(address,uint256)": "44426",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 923,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 923,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 88,
									"end": 90,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 143,
									"end": 148,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 136,
									"end": 141,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 129,
									"end": 149,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 88,
									"end": 90,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 170,
									"end": 183,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 170,
									"end": 183,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 232,
									"end": 242,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 232,
									"end": 242,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 232,
									"end": 242,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 229,
									"end": 231,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 229,
									"end": 231,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 229,
									"end": 231,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 245,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 320,
									"end": 322,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 314,
									"end": 323,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 288,
									"end": 290,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 374,
									"end": 387,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 374,
									"end": 387,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 370,
									"end": 392,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 370,
									"end": 392,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 370,
									"end": 392,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 394,
									"end": 396,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 366,
									"end": 397,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 362,
									"end": 402,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 350,
									"end": 403,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 350,
									"end": 403,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 350,
									"end": 403,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 418,
									"end": 436,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 418,
									"end": 436,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 418,
									"end": 436,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 438,
									"end": 460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 438,
									"end": 460,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 438,
									"end": 460,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 415,
									"end": 461,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 412,
									"end": 414,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 412,
									"end": 414,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 464,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 504,
									"end": 514,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 500,
									"end": 502,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 493,
									"end": 515,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 539,
									"end": 541,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 531,
									"end": 537,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 524,
									"end": 542,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 561,
									"end": 565,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 551,
									"end": 565,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 551,
									"end": 565,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 606,
									"end": 609,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 601,
									"end": 603,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 596,
									"end": 598,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 588,
									"end": 594,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 584,
									"end": 599,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 580,
									"end": 604,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 577,
									"end": 610,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 574,
									"end": 576,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 574,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 627,
									"end": 632,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 620,
									"end": 625,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 613,
									"end": 633,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 574,
									"end": 576,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 653,
									"end": 658,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 644,
									"end": 658,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 644,
									"end": 658,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 667,
									"end": 800,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 681,
									"end": 683,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 678,
									"end": 679,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 675,
									"end": 684,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 667,
									"end": 800,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 667,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 769,
									"end": 783,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 765,
									"end": 788,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 765,
									"end": 788,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 759,
									"end": 789,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 738,
									"end": 752,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 734,
									"end": 757,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 734,
									"end": 757,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 727,
									"end": 790,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 692,
									"end": 702,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 692,
									"end": 702,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 692,
									"end": 702,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 692,
									"end": 702,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 667,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 667,
									"end": 800,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 815,
									"end": 816,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 812,
									"end": 821,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 809,
									"end": 811,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 809,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 809,
									"end": 811,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 877,
									"end": 882,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 872,
									"end": 874,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 867,
									"end": 869,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 859,
									"end": 865,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 855,
									"end": 870,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 851,
									"end": 875,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 844,
									"end": 883,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 809,
									"end": 811,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 809,
									"end": 811,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 911,
									"end": 917,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 78,
									"end": 923,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 78,
									"end": 923,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1027,
									"end": 1033,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1035,
									"end": 1041,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1085,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1067,
									"end": 1074,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1063,
									"end": 1086,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1059,
									"end": 1091,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1109,
									"end": 1115,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1094,
									"end": 1116,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1236,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1223,
									"end": 1245,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1319,
									"end": 1326,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1299,
									"end": 1308,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1295,
									"end": 1317,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1327,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1327,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1373,
									"end": 1375,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1362,
									"end": 1371,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1376,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1352,
									"end": 1377,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1336,
									"end": 1377,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1336,
									"end": 1377,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1404,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1392,
									"end": 1400,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1389,
									"end": 1405,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1423,
									"end": 1429,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1421,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1408,
									"end": 1430,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1506,
									"end": 1513,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1495,
									"end": 1503,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1493,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1504,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1525,
									"end": 1905,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1525,
									"end": 1905,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1722,
									"end": 1726,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1714,
									"end": 1720,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1727,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1700,
									"end": 1727,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1700,
									"end": 1727,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1775,
									"end": 1777,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1773,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1764,
									"end": 1778,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1744,
									"end": 1762,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1741,
									"end": 1779,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1831,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1816,
									"end": 1819,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1809,
									"end": 1810,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1802,
									"end": 1833,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1856,
									"end": 1860,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1853,
									"end": 1854,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1846,
									"end": 1861,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1881,
									"end": 1882,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 1889,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1910,
									"end": 2037,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1910,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1971,
									"end": 1981,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1966,
									"end": 1969,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1962,
									"end": 1982,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1983,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1992,
									"end": 2007,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2026,
									"end": 2030,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2023,
									"end": 2024,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2016,
									"end": 2031,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1942,
									"end": 2037,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1942,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d55dd051437ff91a0ad7f6b9e9cf268071ca9c4fceb03a02ebd0eb98e42bc1f364736f6c63430008040033",
									".code": [
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 1482,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1483,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1484,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1398,
											"end": 1490,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5097,
											"end": 5122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5097,
											"end": 5122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5097,
											"end": 5122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5085,
											"end": 5087,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5070,
											"end": 5088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5052,
											"end": 5128,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5275,
											"end": 5311,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5275,
											"end": 5311,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5230,
											"end": 5317,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4749,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4729,
											"end": 4750,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4788,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4766,
											"end": 4784,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4766,
											"end": 4784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4825,
											"end": 4859,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4860,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 4903,
											"name": "PUSH",
											"source": 5,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4869,
											"end": 4904,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4342,
											"end": 4344,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4324,
											"end": 4345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4381,
											"end": 4383,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4384,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4454,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4498,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4534,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4515,
											"end": 4534,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4314,
											"end": 4540,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2768,
											"end": 2770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2771,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2809,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2846,
											"end": 2880,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2826,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2826,
											"end": 2844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 2844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2881,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2922,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2939,
											"end": 2958,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2939,
											"end": 2958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2740,
											"end": 2964,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5097,
											"end": 5122,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5097,
											"end": 5122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5097,
											"end": 5122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 10994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3153,
											"end": 3174,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3212,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3280,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3229,
											"end": 3247,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3229,
											"end": 3247,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3247,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3298,
											"end": 3316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3143,
											"end": 3322,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3918,
											"end": 3939,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3975,
											"end": 3977,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3978,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4014,
											"end": 4048,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4049,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4058,
											"end": 4093,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4129,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4110,
											"end": 4129,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3908,
											"end": 4135,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2366,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2346,
											"end": 2367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2383,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2383,
											"end": 2401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2383,
											"end": 2401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2442,
											"end": 2476,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2518,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2486,
											"end": 2519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2536,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2536,
											"end": 2555,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2336,
											"end": 2561,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3531,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3511,
											"end": 3532,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3570,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3571,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3641,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3587,
											"end": 3605,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3587,
											"end": 3605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3587,
											"end": 3605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3686,
											"name": "PUSH",
											"source": 5,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3651,
											"end": 3687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3723,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3704,
											"end": 3723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3501,
											"end": 3729,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5097,
											"end": 5122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5097,
											"end": 5122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5085,
											"end": 5087,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5070,
											"end": 5088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5070,
											"end": 5088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5128,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 63,
											"end": 210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 63,
											"end": 210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 63,
											"end": 210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 63,
											"end": 210,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 215,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 215,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 295,
											"end": 297,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 295,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 295,
											"end": 297,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 348,
											"end": 354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 340,
											"end": 346,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 333,
											"end": 355,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 295,
											"end": 297,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 295,
											"end": 297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 376,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 376,
											"end": 405,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 405,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 376,
											"end": 405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 405,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 285,
											"end": 411,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 285,
											"end": 411,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 416,
											"end": 686,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 416,
											"end": 686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 484,
											"end": 490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 498,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 545,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 524,
											"end": 531,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 516,
											"end": 548,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 513,
											"end": 515,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 513,
											"end": 515,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 566,
											"end": 572,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 558,
											"end": 564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 551,
											"end": 573,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 513,
											"end": 515,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 513,
											"end": 515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 613,
											"end": 622,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 594,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 594,
											"end": 623,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 623,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 594,
											"end": 623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 584,
											"end": 623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 584,
											"end": 623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 676,
											"end": 678,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 674,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 661,
											"end": 679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 642,
											"end": 680,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 680,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 642,
											"end": 680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 632,
											"end": 680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 632,
											"end": 680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 503,
											"end": 686,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 503,
											"end": 686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 503,
											"end": 686,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 503,
											"end": 686,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 503,
											"end": 686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 503,
											"end": 686,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 691,
											"end": 1029,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 691,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 768,
											"end": 774,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 784,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 825,
											"end": 834,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 816,
											"end": 823,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 812,
											"end": 835,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 808,
											"end": 840,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 805,
											"end": 807,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 805,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 805,
											"end": 807,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 858,
											"end": 864,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 856,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 843,
											"end": 865,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 805,
											"end": 807,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 805,
											"end": 807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 886,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 886,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 876,
											"end": 915,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 876,
											"end": 915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 934,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 966,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 953,
											"end": 971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 934,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 934,
											"end": 972,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 972,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 934,
											"end": 972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 972,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 924,
											"end": 972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1022,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1023,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1023,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1029,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1298,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1034,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1149,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1166,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1191,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1212,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1231,
											"end": 1240,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1212,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1212,
											"end": 1241,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1212,
											"end": 1241,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1212,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1241,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1292,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1292,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1121,
											"end": 1298,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1495,
											"end": 2157,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1638,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1667,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1663,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1668,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1737,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1738,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1747,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1918,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1778,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1789,
											"end": 1790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 1799,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1918,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1778,
											"end": 1918,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1901,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1906,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1906,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1877,
											"end": 1907,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1870,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1870,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1870,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1874,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1908,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1817,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1778,
											"end": 1918,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1918,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1778,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1933,
											"end": 1934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1943,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2010,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2003,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1992,
											"end": 1998,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 1990,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2004,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 2011,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2061,
											"end": 2076,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2144,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 2057,
											"end": 2145,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2148,
											"end": 2150,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2151,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 2157,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 2157,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5322,
											"end": 5608,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5322,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5365,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5396,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5382,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 5380,
											"end": 5382,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5431,
											"end": 5508,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5426,
											"end": 5429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5419,
											"end": 5509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5529,
											"end": 5530,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5522,
											"end": 5537,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5562,
											"end": 5566,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5557,
											"end": 5560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5550,
											"end": 5567,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5382,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 5380,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5593,
											"end": 5602,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5593,
											"end": 5602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5370,
											"end": 5608,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5613,
											"end": 6050,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 5613,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5692,
											"end": 5693,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5688,
											"end": 5700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5700,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5735,
											"end": 5747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5735,
											"end": 5747,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5735,
											"end": 5747,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5756,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5756,
											"end": 5758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5814,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 5802,
											"end": 5808,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5788,
											"end": 5815,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5788,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5756,
											"end": 5758,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5756,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5855,
											"end": 5861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5866,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5832,
											"end": 5850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5829,
											"end": 5867,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5828,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5826,
											"end": 5828,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5897,
											"end": 5898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5890,
											"end": 5978,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5991,
											"end": 6006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6033,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6026,
											"end": 6027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6034,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5828,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5826,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 6050,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 6050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 6050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 6050,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LokeyERC20.sol": {
				"LokeyER20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lo_stake",
									"type": "address"
								}
							],
							"name": "setLoStake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewLoStake",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LokeyERC20.sol\":119:1299  contract LokeyER20 is ERC20 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LokeyERC20.sol\":214:230  1000000000 ether */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/LokeyERC20.sol\":185:230  uint256 private max_supply = 1000000000 ether */\n  0x06\n  sstore\n    /* \"contracts/LokeyERC20.sol\":265:382  constructor() ERC20(\"LokeyDAO\", \"LOKEY\") {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x08\n  dup2\n  mstore\n  shl(0xc0, 0x4c6f6b657944414f)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x05\n  dup5\n  mstore\n  shl(0xd8, 0x4c4f4b4559)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  tag_5\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_7\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"contracts/LokeyERC20.sol\":317:322  admin */\n  0x07\n    /* \"contracts/LokeyERC20.sol\":317:335  admin = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/LokeyERC20.sol\":325:335  msg.sender */\n  caller\n    /* \"contracts/LokeyERC20.sol\":317:335  admin = msg.sender */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/LokeyERC20.sol\":346:374  _mint(admin, 50000000 ether) */\n  tag_9\n  swap2\n  pop\n    /* \"contracts/LokeyERC20.sol\":359:373  50000000 ether */\n  0x295be96e64066972000000\n    /* \"contracts/LokeyERC20.sol\":346:351  _mint */\n  tag_10\n    /* \"contracts/LokeyERC20.sol\":346:374  _mint(admin, 50000000 ether) */\n  jump\t// in\ntag_9:\n    /* \"contracts/LokeyERC20.sol\":119:1299  contract LokeyER20 is ERC20 {\r... */\n  jump(tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8402:8791  function _mint(address account, uint256 amount) internal virtual {... */\ntag_10:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8485:8506  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x1f\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:327   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:328   */\n  mstore\n    /* \"#utility.yul\":345:363   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8629:8635  amount */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8613:8625  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8613:8635  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8654  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n  dup1\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8667:8673  amount */\n  dup4\n  swap3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8654  _balances */\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n  tag_20\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8667:8673  amount */\n  dup5\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n  tag_19\n  jump\t// in\ntag_20:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":520:545   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8705:8706  0 */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":508:510   */\n  0x20\n    /* \"#utility.yul\":493:511   */\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8402:8791  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/LokeyERC20.sol\":119:1299  contract LokeyER20 is ERC20 {\r... */\ntag_6:\n  dup3\n  dup1\n  sload\n  tag_27\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_30\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_33)\ntag_30:\n  dup3\n  0x1f\n  lt\n  tag_31\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_33)\ntag_31:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_33\n  jumpi\n  swap2\n  dup3\n  add\ntag_32:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_32)\ntag_33:\n  pop\n  tag_34\n  swap3\n  swap2\n  pop\n  tag_35\n  jump\t// in\ntag_34:\n  pop\n  swap1\n  jump\t// out\ntag_35:\ntag_36:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_34\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_36)\n    /* \"#utility.yul\":556:785   */\ntag_19:\n    /* \"#utility.yul\":596:599   */\n  0x00\n    /* \"#utility.yul\":627:628   */\n  dup3\n    /* \"#utility.yul\":623:629   */\n  not\n    /* \"#utility.yul\":620:621   */\n  dup3\n    /* \"#utility.yul\":617:630   */\n  gt\n    /* \"#utility.yul\":614:616   */\n  iszero\n  tag_42\n  jumpi\n  shl(0xe0, 0x4e487b71)\n    /* \"#utility.yul\":653:686   */\n  dup2\n  mstore\n    /* \"#utility.yul\":709:713   */\n  0x11\n    /* \"#utility.yul\":706:707   */\n  0x04\n    /* \"#utility.yul\":699:714   */\n  mstore\n    /* \"#utility.yul\":739:743   */\n  0x24\n    /* \"#utility.yul\":660:663   */\n  dup2\n    /* \"#utility.yul\":727:744   */\n  revert\n    /* \"#utility.yul\":614:616   */\ntag_42:\n  pop\n    /* \"#utility.yul\":770:779   */\n  add\n  swap1\n    /* \"#utility.yul\":604:785   */\n  jump\t// out\n    /* \"#utility.yul\":790:1170   */\ntag_28:\n    /* \"#utility.yul\":869:870   */\n  0x01\n    /* \"#utility.yul\":865:877   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":912:924   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":933:935   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":987:991   */\n  0x7f\n    /* \"#utility.yul\":979:985   */\n  dup3\n    /* \"#utility.yul\":975:992   */\n  and\n    /* \"#utility.yul\":965:992   */\n  swap2\n  pop\n    /* \"#utility.yul\":933:935   */\ntag_44:\n    /* \"#utility.yul\":1040:1042   */\n  0x20\n    /* \"#utility.yul\":1032:1038   */\n  dup3\n    /* \"#utility.yul\":1029:1043   */\n  lt\n    /* \"#utility.yul\":1009:1027   */\n  dup2\n    /* \"#utility.yul\":1006:1044   */\n  eq\n    /* \"#utility.yul\":1003:1005   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  0x4e487b71\n    /* \"#utility.yul\":1081:1084   */\n  0xe0\n    /* \"#utility.yul\":1077:1097   */\n  shl\n    /* \"#utility.yul\":1074:1075   */\n  0x00\n    /* \"#utility.yul\":1067:1098   */\n  mstore\n    /* \"#utility.yul\":1121:1125   */\n  0x22\n    /* \"#utility.yul\":1118:1119   */\n  0x04\n    /* \"#utility.yul\":1111:1126   */\n  mstore\n    /* \"#utility.yul\":1149:1153   */\n  0x24\n    /* \"#utility.yul\":1146:1147   */\n  0x00\n    /* \"#utility.yul\":1139:1154   */\n  revert\n    /* \"#utility.yul\":1003:1005   */\ntag_45:\n  pop\n    /* \"#utility.yul\":845:1170   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_38:\n    /* \"contracts/LokeyERC20.sol\":119:1299  contract LokeyER20 is ERC20 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LokeyERC20.sol\":119:1299  contract LokeyER20 is ERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd1823b28\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9910ed9a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x77b06d01\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1894:1908   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1887:1909   */\n      iszero\n        /* \"#utility.yul\":1869:1910   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1857:1859   */\n      0x20\n        /* \"#utility.yul\":1842:1860   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_24\n        /* \"#utility.yul\":1824:1916   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":7233:7258   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7221:7223   */\n      0x20\n        /* \"#utility.yul\":7206:7224   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":7188:7264   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_26\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":7411:7447   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7399:7401   */\n      0x20\n        /* \"#utility.yul\":7384:7402   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_24\n        /* \"#utility.yul\":7366:7453   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_26\n      tag_46\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_32\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/LokeyERC20.sol\":1119:1206  function viewLoStake() public view returns (address) {\r... */\n    tag_10:\n        /* \"contracts/LokeyERC20.sol\":1190:1198  lo_stake */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/LokeyERC20.sol\":1119:1206  function viewLoStake() public view returns (address) {\r... */\n    tag_54:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1662:1717   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1644:1718   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1632:1634   */\n      0x20\n        /* \"#utility.yul\":1617:1635   */\n      add\n        /* \"contracts/LokeyERC20.sol\":1119:1206  function viewLoStake() public view returns (address) {\r... */\n      tag_24\n        /* \"#utility.yul\":1599:1724   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_22\n      tag_59\n      jump\t// in\n        /* \"contracts/LokeyERC20.sol\":1214:1296  function viewAdmin() public view returns (address) {\r... */\n    tag_12:\n        /* \"contracts/LokeyERC20.sol\":1283:1288  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"contracts/LokeyERC20.sol\":1214:1296  function viewAdmin() public view returns (address) {\r... */\n      jump(tag_54)\n        /* \"contracts/LokeyERC20.sol\":497:745  function mint(uint256 amount) public loStakeOnly returns (bool) {\r... */\n    tag_13:\n      tag_26\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_14:\n      tag_26\n      tag_70\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_15:\n      tag_26\n      tag_74\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"contracts/LokeyERC20.sol\":753:1016  function setLoStake(address _lo_stake) public returns (bool, address) {\r... */\n    tag_16:\n      tag_77\n      tag_78\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2114:2128   */\n      swap3\n      iszero\n        /* \"#utility.yul\":2107:2129   */\n      iszero\n        /* \"#utility.yul\":2089:2130   */\n      dup4\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2166:2221   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2161:2163   */\n      0x20\n        /* \"#utility.yul\":2146:2164   */\n      dup4\n      add\n        /* \"#utility.yul\":2139:2222   */\n      mstore\n        /* \"#utility.yul\":2062:2080   */\n      add\n        /* \"contracts/LokeyERC20.sol\":753:1016  function setLoStake(address _lo_stake) public returns (bool, address) {\r... */\n      tag_24\n        /* \"#utility.yul\":2044:2228   */\n      jump\n        /* \"contracts/LokeyERC20.sol\":1024:1111  function maxSupply() public view returns (uint256) {\r... */\n    tag_17:\n        /* \"contracts/LokeyERC20.sol\":1093:1103  max_supply */\n      sload(0x06)\n        /* \"contracts/LokeyERC20.sol\":1024:1111  function maxSupply() public view returns (uint256) {\r... */\n      jump(tag_32)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_18:\n      tag_32\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_100\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_100:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_107:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_100\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_114\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n        /* \"contracts/LokeyERC20.sol\":497:745  function mint(uint256 amount) public loStakeOnly returns (bool) {\r... */\n    tag_67:\n        /* \"contracts/LokeyERC20.sol\":444:452  lo_stake */\n      sload(0x05)\n        /* \"contracts/LokeyERC20.sol\":555:559  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LokeyERC20.sol\":444:452  lo_stake */\n      and\n        /* \"contracts/LokeyERC20.sol\":430:440  msg.sender */\n      caller\n        /* \"contracts/LokeyERC20.sol\":430:452  msg.sender == lo_stake */\n      eq\n        /* \"contracts/LokeyERC20.sol\":422:469  require(msg.sender == lo_stake, \"Unauthorized\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3854:3856   */\n      0x20\n        /* \"contracts/LokeyERC20.sol\":422:469  require(msg.sender == lo_stake, \"Unauthorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3836:3857   */\n      mstore\n        /* \"#utility.yul\":3893:3895   */\n      0x0c\n        /* \"#utility.yul\":3873:3891   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3866:3896   */\n      mstore\n        /* \"#utility.yul\":3932:3946   */\n      0x556e617574686f72697a65640000000000000000000000000000000000000000\n        /* \"#utility.yul\":3912:3930   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3905:3947   */\n      mstore\n        /* \"#utility.yul\":3964:3982   */\n      0x64\n      add\n        /* \"contracts/LokeyERC20.sol\":422:469  require(msg.sender == lo_stake, \"Unauthorized\") */\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/LokeyERC20.sol\":572:589  uint256 total_sup */\n      0x00\n        /* \"contracts/LokeyERC20.sol\":592:605  totalSupply() */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/LokeyERC20.sol\":592:605  totalSupply() */\n    tag_130:\n        /* \"contracts/LokeyERC20.sol\":646:656  max_supply */\n      sload(0x06)\n        /* \"contracts/LokeyERC20.sol\":572:605  uint256 total_sup = totalSupply() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/LokeyERC20.sol\":624:642  total_sup + amount */\n      tag_131\n        /* \"contracts/LokeyERC20.sol\":636:642  amount */\n      dup5\n        /* \"contracts/LokeyERC20.sol\":572:605  uint256 total_sup = totalSupply() */\n      dup4\n        /* \"contracts/LokeyERC20.sol\":624:642  total_sup + amount */\n      tag_115\n      jump\t// in\n    tag_131:\n        /* \"contracts/LokeyERC20.sol\":624:656  total_sup + amount <= max_supply */\n      gt\n      iszero\n        /* \"contracts/LokeyERC20.sol\":616:681  require(total_sup + amount <= max_supply, \"LOKEY: Exceeds Limit\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6174:6176   */\n      0x20\n        /* \"contracts/LokeyERC20.sol\":616:681  require(total_sup + amount <= max_supply, \"LOKEY: Exceeds Limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6156:6177   */\n      mstore\n        /* \"#utility.yul\":6213:6215   */\n      0x14\n        /* \"#utility.yul\":6193:6211   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6186:6216   */\n      mstore\n        /* \"#utility.yul\":6252:6274   */\n      0x4c4f4b45593a2045786365656473204c696d6974000000000000000000000000\n        /* \"#utility.yul\":6232:6250   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6225:6275   */\n      mstore\n        /* \"#utility.yul\":6292:6310   */\n      0x64\n      add\n        /* \"contracts/LokeyERC20.sol\":616:681  require(total_sup + amount <= max_supply, \"LOKEY: Exceeds Limit\") */\n      tag_127\n        /* \"#utility.yul\":6146:6316   */\n      jump\n        /* \"contracts/LokeyERC20.sol\":616:681  require(total_sup + amount <= max_supply, \"LOKEY: Exceeds Limit\") */\n    tag_132:\n        /* \"contracts/LokeyERC20.sol\":698:706  lo_stake */\n      sload(0x05)\n        /* \"contracts/LokeyERC20.sol\":692:715  _mint(lo_stake, amount) */\n      tag_135\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LokeyERC20.sol\":698:706  lo_stake */\n      and\n        /* \"contracts/LokeyERC20.sol\":708:714  amount */\n      dup5\n        /* \"contracts/LokeyERC20.sol\":692:697  _mint */\n      tag_136\n        /* \"contracts/LokeyERC20.sol\":692:715  _mint(lo_stake, amount) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/LokeyERC20.sol\":733:737  true */\n      0x01\n        /* \"contracts/LokeyERC20.sol\":726:737  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/LokeyERC20.sol\":480:481  _ */\n    tag_129:\n        /* \"contracts/LokeyERC20.sol\":497:745  function mint(uint256 amount) public loStakeOnly returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6523:6525   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6505:6526   */\n      mstore\n        /* \"#utility.yul\":6562:6564   */\n      0x25\n        /* \"#utility.yul\":6542:6560   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6535:6565   */\n      mstore\n        /* \"#utility.yul\":6601:6635   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6581:6599   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6574:6636   */\n      mstore\n        /* \"#utility.yul\":6672:6679   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6652:6670   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6645:6680   */\n      mstore\n        /* \"#utility.yul\":6697:6716   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_127\n        /* \"#utility.yul\":6495:6722   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_100\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/LokeyERC20.sol\":753:1016  function setLoStake(address _lo_stake) public returns (bool, address) {\r... */\n    tag_79:\n        /* \"contracts/LokeyERC20.sol\":856:861  admin */\n      sload(0x07)\n        /* \"contracts/LokeyERC20.sol\":808:812  bool */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LokeyERC20.sol\":856:861  admin */\n      and\n        /* \"contracts/LokeyERC20.sol\":842:852  msg.sender */\n      caller\n        /* \"contracts/LokeyERC20.sol\":842:861  msg.sender == admin */\n      eq\n        /* \"contracts/LokeyERC20.sol\":834:878  require(msg.sender == admin, \"Unauthorized\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3854:3856   */\n      0x20\n        /* \"contracts/LokeyERC20.sol\":834:878  require(msg.sender == admin, \"Unauthorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3836:3857   */\n      mstore\n        /* \"#utility.yul\":3893:3895   */\n      0x0c\n        /* \"#utility.yul\":3873:3891   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3866:3896   */\n      mstore\n        /* \"#utility.yul\":3932:3946   */\n      0x556e617574686f72697a65640000000000000000000000000000000000000000\n        /* \"#utility.yul\":3912:3930   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3905:3947   */\n      mstore\n        /* \"#utility.yul\":3964:3982   */\n      0x64\n      add\n        /* \"contracts/LokeyERC20.sol\":834:878  require(msg.sender == admin, \"Unauthorized\") */\n      tag_127\n        /* \"#utility.yul\":3826:3988   */\n      jump\n        /* \"contracts/LokeyERC20.sol\":834:878  require(msg.sender == admin, \"Unauthorized\") */\n    tag_148:\n        /* \"contracts/LokeyERC20.sol\":897:905  lo_stake */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/LokeyERC20.sol\":897:919  lo_stake == address(0) */\n      iszero\n        /* \"contracts/LokeyERC20.sol\":889:943  require(lo_stake == address(0), \"LoStake already set\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3506:3508   */\n      0x20\n        /* \"contracts/LokeyERC20.sol\":889:943  require(lo_stake == address(0), \"LoStake already set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3488:3509   */\n      mstore\n        /* \"#utility.yul\":3545:3547   */\n      0x13\n        /* \"#utility.yul\":3525:3543   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3518:3548   */\n      mstore\n        /* \"#utility.yul\":3584:3605   */\n      0x4c6f5374616b6520616c72656164792073657400000000000000000000000000\n        /* \"#utility.yul\":3564:3582   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3557:3606   */\n      mstore\n        /* \"#utility.yul\":3623:3641   */\n      0x64\n      add\n        /* \"contracts/LokeyERC20.sol\":889:943  require(lo_stake == address(0), \"LoStake already set\") */\n      tag_127\n        /* \"#utility.yul\":3478:3647   */\n      jump\n        /* \"contracts/LokeyERC20.sol\":889:943  require(lo_stake == address(0), \"LoStake already set\") */\n    tag_150:\n      pop\n      pop\n        /* \"contracts/LokeyERC20.sol\":954:962  lo_stake */\n      0x05\n        /* \"contracts/LokeyERC20.sol\":954:974  lo_stake = _lo_stake */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap1\n      swap3\n      and\n      dup3\n      or\n      swap1\n      sstore\n      0x01\n      swap2\n        /* \"contracts/LokeyERC20.sol\":753:1016  function setLoStake(address _lo_stake) public returns (bool, address) {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5769:5771   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5751:5772   */\n      mstore\n        /* \"#utility.yul\":5808:5810   */\n      0x24\n        /* \"#utility.yul\":5788:5806   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5781:5811   */\n      mstore\n        /* \"#utility.yul\":5847:5881   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5827:5845   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5820:5882   */\n      mstore\n        /* \"#utility.yul\":5918:5924   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5898:5916   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5891:5925   */\n      mstore\n        /* \"#utility.yul\":5942:5961   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_127\n        /* \"#utility.yul\":5741:5967   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4177:4198   */\n      mstore\n        /* \"#utility.yul\":4234:4236   */\n      0x22\n        /* \"#utility.yul\":4214:4232   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4207:4237   */\n      mstore\n        /* \"#utility.yul\":4273:4307   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4253:4271   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4246:4308   */\n      mstore\n        /* \"#utility.yul\":4344:4348   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4324:4342   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4317:4349   */\n      mstore\n        /* \"#utility.yul\":4366:4385   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_127\n        /* \"#utility.yul\":4167:4391   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":7233:7258   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":7206:7224   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10977:10994  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4598:4600   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4580:4601   */\n      mstore\n        /* \"#utility.yul\":4637:4639   */\n      0x1d\n        /* \"#utility.yul\":4617:4635   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4610:4640   */\n      mstore\n        /* \"#utility.yul\":4676:4707   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4656:4674   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4649:4708   */\n      mstore\n        /* \"#utility.yul\":4725:4743   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_127\n        /* \"#utility.yul\":4570:4749   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5345:5366   */\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x25\n        /* \"#utility.yul\":5382:5400   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5375:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5475   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5421:5439   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5414:5476   */\n      mstore\n        /* \"#utility.yul\":5512:5519   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5492:5510   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5485:5520   */\n      mstore\n        /* \"#utility.yul\":5537:5556   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_127\n        /* \"#utility.yul\":5335:5562   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3102:3104   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3084:3105   */\n      mstore\n        /* \"#utility.yul\":3141:3143   */\n      0x23\n        /* \"#utility.yul\":3121:3139   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3114:3144   */\n      mstore\n        /* \"#utility.yul\":3180:3214   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":3160:3178   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3153:3215   */\n      mstore\n        /* \"#utility.yul\":3251:3256   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3231:3249   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3224:3257   */\n      mstore\n        /* \"#utility.yul\":3274:3293   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n        /* \"#utility.yul\":3074:3299   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4956:4958   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4938:4959   */\n      mstore\n        /* \"#utility.yul\":4995:4997   */\n      0x26\n        /* \"#utility.yul\":4975:4993   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4968:4998   */\n      mstore\n        /* \"#utility.yul\":5034:5068   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5014:5032   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5007:5069   */\n      mstore\n        /* \"#utility.yul\":5105:5113   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5085:5103   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5078:5114   */\n      mstore\n        /* \"#utility.yul\":5131:5150   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_127\n        /* \"#utility.yul\":4928:5156   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_183\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_115\n      jump\t// in\n    tag_183:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_184\n      swap2\n        /* \"#utility.yul\":7233:7258   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7221:7223   */\n      0x20\n        /* \"#utility.yul\":7206:7224   */\n      add\n      swap1\n        /* \"#utility.yul\":7188:7264   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8402:8791  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8485:8506  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6929:6931   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6911:6932   */\n      mstore\n        /* \"#utility.yul\":6968:6970   */\n      0x1f\n        /* \"#utility.yul\":6948:6966   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6941:6971   */\n      mstore\n        /* \"#utility.yul\":7007:7040   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":6987:7005   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6980:7041   */\n      mstore\n        /* \"#utility.yul\":7058:7076   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_127\n        /* \"#utility.yul\":6901:7082   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8629:8635  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8613:8625  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8613:8635  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_192\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_192:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8654  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8667:8673  amount */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8654  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n      tag_193\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8667:8673  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n      tag_115\n      jump\t// in\n    tag_193:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":7233:7258   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8705:8706  0 */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":7221:7223   */\n      0x20\n        /* \"#utility.yul\":7206:7224   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8402:8791  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_199:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":215:411   */\n    tag_51:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:297   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":348:354   */\n      dup1\n        /* \"#utility.yul\":340:346   */\n      dup2\n        /* \"#utility.yul\":333:355   */\n      revert\n        /* \"#utility.yul\":295:297   */\n    tag_203:\n        /* \"#utility.yul\":376:405   */\n      tag_204\n        /* \"#utility.yul\":395:404   */\n      dup3\n        /* \"#utility.yul\":376:405   */\n      tag_199\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":366:405   */\n      swap4\n        /* \"#utility.yul\":285:411   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":416:686   */\n    tag_87:\n        /* \"#utility.yul\":484:490   */\n      0x00\n        /* \"#utility.yul\":492:498   */\n      dup1\n        /* \"#utility.yul\":545:547   */\n      0x40\n        /* \"#utility.yul\":533:542   */\n      dup4\n        /* \"#utility.yul\":524:531   */\n      dup6\n        /* \"#utility.yul\":520:543   */\n      sub\n        /* \"#utility.yul\":516:548   */\n      slt\n        /* \"#utility.yul\":513:515   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":566:572   */\n      dup1\n        /* \"#utility.yul\":558:564   */\n      dup2\n        /* \"#utility.yul\":551:573   */\n      revert\n        /* \"#utility.yul\":513:515   */\n    tag_206:\n        /* \"#utility.yul\":594:623   */\n      tag_207\n        /* \"#utility.yul\":613:622   */\n      dup4\n        /* \"#utility.yul\":594:623   */\n      tag_199\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":584:623   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:680   */\n      tag_208\n        /* \"#utility.yul\":676:678   */\n      0x20\n        /* \"#utility.yul\":665:674   */\n      dup5\n        /* \"#utility.yul\":661:679   */\n      add\n        /* \"#utility.yul\":642:680   */\n      tag_199\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":632:680   */\n      swap1\n      pop\n        /* \"#utility.yul\":503:686   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1029   */\n    tag_38:\n        /* \"#utility.yul\":768:774   */\n      0x00\n        /* \"#utility.yul\":776:782   */\n      dup1\n        /* \"#utility.yul\":784:790   */\n      0x00\n        /* \"#utility.yul\":837:839   */\n      0x60\n        /* \"#utility.yul\":825:834   */\n      dup5\n        /* \"#utility.yul\":816:823   */\n      dup7\n        /* \"#utility.yul\":812:835   */\n      sub\n        /* \"#utility.yul\":808:840   */\n      slt\n        /* \"#utility.yul\":805:807   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":858:864   */\n      dup1\n        /* \"#utility.yul\":850:856   */\n      dup2\n        /* \"#utility.yul\":843:865   */\n      revert\n        /* \"#utility.yul\":805:807   */\n    tag_210:\n        /* \"#utility.yul\":886:915   */\n      tag_211\n        /* \"#utility.yul\":905:914   */\n      dup5\n        /* \"#utility.yul\":886:915   */\n      tag_199\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":876:915   */\n      swap3\n      pop\n        /* \"#utility.yul\":934:972   */\n      tag_212\n        /* \"#utility.yul\":968:970   */\n      0x20\n        /* \"#utility.yul\":957:966   */\n      dup6\n        /* \"#utility.yul\":953:971   */\n      add\n        /* \"#utility.yul\":934:972   */\n      tag_199\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":924:972   */\n      swap2\n      pop\n        /* \"#utility.yul\":1019:1021   */\n      0x40\n        /* \"#utility.yul\":1008:1017   */\n      dup5\n        /* \"#utility.yul\":1004:1022   */\n      add\n        /* \"#utility.yul\":991:1023   */\n      calldataload\n        /* \"#utility.yul\":981:1023   */\n      swap1\n      pop\n        /* \"#utility.yul\":795:1029   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1034:1298   */\n    tag_28:\n        /* \"#utility.yul\":1102:1108   */\n      0x00\n        /* \"#utility.yul\":1110:1116   */\n      dup1\n        /* \"#utility.yul\":1163:1165   */\n      0x40\n        /* \"#utility.yul\":1151:1160   */\n      dup4\n        /* \"#utility.yul\":1142:1149   */\n      dup6\n        /* \"#utility.yul\":1138:1161   */\n      sub\n        /* \"#utility.yul\":1134:1166   */\n      slt\n        /* \"#utility.yul\":1131:1133   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":1184:1190   */\n      dup2\n        /* \"#utility.yul\":1176:1182   */\n      dup3\n        /* \"#utility.yul\":1169:1191   */\n      revert\n        /* \"#utility.yul\":1131:1133   */\n    tag_214:\n        /* \"#utility.yul\":1212:1241   */\n      tag_215\n        /* \"#utility.yul\":1231:1240   */\n      dup4\n        /* \"#utility.yul\":1212:1241   */\n      tag_199\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1202:1241   */\n      swap5\n        /* \"#utility.yul\":1288:1290   */\n      0x20\n        /* \"#utility.yul\":1273:1291   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1260:1292   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1121:1298   */\n      jump\t// out\n        /* \"#utility.yul\":1303:1493   */\n    tag_66:\n        /* \"#utility.yul\":1362:1368   */\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x20\n        /* \"#utility.yul\":1403:1412   */\n      dup3\n        /* \"#utility.yul\":1394:1401   */\n      dup5\n        /* \"#utility.yul\":1390:1413   */\n      sub\n        /* \"#utility.yul\":1386:1418   */\n      slt\n        /* \"#utility.yul\":1383:1385   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":1436:1442   */\n      dup1\n        /* \"#utility.yul\":1428:1434   */\n      dup2\n        /* \"#utility.yul\":1421:1443   */\n      revert\n        /* \"#utility.yul\":1383:1385   */\n    tag_217:\n      pop\n        /* \"#utility.yul\":1464:1487   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1373:1493   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2233:2895   */\n    tag_25:\n        /* \"#utility.yul\":2345:2349   */\n      0x00\n        /* \"#utility.yul\":2374:2376   */\n      0x20\n        /* \"#utility.yul\":2403:2405   */\n      dup1\n        /* \"#utility.yul\":2392:2401   */\n      dup4\n        /* \"#utility.yul\":2385:2406   */\n      mstore\n        /* \"#utility.yul\":2435:2441   */\n      dup4\n        /* \"#utility.yul\":2429:2442   */\n      mload\n        /* \"#utility.yul\":2478:2484   */\n      dup1\n        /* \"#utility.yul\":2473:2475   */\n      dup3\n        /* \"#utility.yul\":2462:2471   */\n      dup6\n        /* \"#utility.yul\":2458:2476   */\n      add\n        /* \"#utility.yul\":2451:2485   */\n      mstore\n        /* \"#utility.yul\":2503:2507   */\n      dup3\n        /* \"#utility.yul\":2516:2656   */\n    tag_222:\n        /* \"#utility.yul\":2530:2536   */\n      dup2\n        /* \"#utility.yul\":2527:2528   */\n      dup2\n        /* \"#utility.yul\":2524:2537   */\n      lt\n        /* \"#utility.yul\":2516:2656   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":2625:2639   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2621:2644   */\n      dup4\n      add\n        /* \"#utility.yul\":2615:2645   */\n      mload\n        /* \"#utility.yul\":2591:2608   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2610:2612   */\n      0x40\n        /* \"#utility.yul\":2587:2613   */\n      add\n        /* \"#utility.yul\":2580:2646   */\n      mstore\n        /* \"#utility.yul\":2545:2555   */\n      dup3\n      add\n        /* \"#utility.yul\":2516:2656   */\n      jump(tag_222)\n    tag_224:\n        /* \"#utility.yul\":2674:2680   */\n      dup2\n        /* \"#utility.yul\":2671:2672   */\n      dup2\n        /* \"#utility.yul\":2668:2681   */\n      gt\n        /* \"#utility.yul\":2665:2667   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":2744:2748   */\n      dup4\n        /* \"#utility.yul\":2739:2741   */\n      0x40\n        /* \"#utility.yul\":2730:2736   */\n      dup4\n        /* \"#utility.yul\":2719:2728   */\n      dup8\n        /* \"#utility.yul\":2715:2737   */\n      add\n        /* \"#utility.yul\":2711:2742   */\n      add\n        /* \"#utility.yul\":2704:2749   */\n      mstore\n        /* \"#utility.yul\":2665:2667   */\n    tag_225:\n      pop\n        /* \"#utility.yul\":2811:2813   */\n      0x1f\n        /* \"#utility.yul\":2799:2814   */\n      add\n        /* \"#utility.yul\":2816:2882   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":2795:2883   */\n      and\n        /* \"#utility.yul\":2780:2884   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2886:2888   */\n      0x40\n        /* \"#utility.yul\":2776:2889   */\n      add\n      swap4\n        /* \"#utility.yul\":2354:2895   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7458:7744   */\n    tag_115:\n        /* \"#utility.yul\":7498:7501   */\n      0x00\n        /* \"#utility.yul\":7529:7530   */\n      dup3\n        /* \"#utility.yul\":7525:7531   */\n      not\n        /* \"#utility.yul\":7522:7523   */\n      dup3\n        /* \"#utility.yul\":7519:7532   */\n      gt\n        /* \"#utility.yul\":7516:7518   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":7567:7644   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7562:7565   */\n      dup2\n        /* \"#utility.yul\":7555:7645   */\n      mstore\n        /* \"#utility.yul\":7668:7672   */\n      0x11\n        /* \"#utility.yul\":7665:7666   */\n      0x04\n        /* \"#utility.yul\":7658:7673   */\n      mstore\n        /* \"#utility.yul\":7698:7702   */\n      0x24\n        /* \"#utility.yul\":7693:7696   */\n      dup2\n        /* \"#utility.yul\":7686:7703   */\n      revert\n        /* \"#utility.yul\":7516:7518   */\n    tag_240:\n      pop\n        /* \"#utility.yul\":7729:7738   */\n      add\n      swap1\n        /* \"#utility.yul\":7506:7744   */\n      jump\t// out\n        /* \"#utility.yul\":7749:8186   */\n    tag_92:\n        /* \"#utility.yul\":7828:7829   */\n      0x01\n        /* \"#utility.yul\":7824:7836   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7871:7883   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7892:7894   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":7946:7950   */\n      0x7f\n        /* \"#utility.yul\":7938:7944   */\n      dup3\n        /* \"#utility.yul\":7934:7951   */\n      and\n        /* \"#utility.yul\":7924:7951   */\n      swap2\n      pop\n        /* \"#utility.yul\":7892:7894   */\n    tag_242:\n        /* \"#utility.yul\":7999:8001   */\n      0x20\n        /* \"#utility.yul\":7991:7997   */\n      dup3\n        /* \"#utility.yul\":7988:8002   */\n      lt\n        /* \"#utility.yul\":7968:7986   */\n      dup2\n        /* \"#utility.yul\":7965:8003   */\n      eq\n        /* \"#utility.yul\":7962:7964   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":8036:8113   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8033:8034   */\n      0x00\n        /* \"#utility.yul\":8026:8114   */\n      mstore\n        /* \"#utility.yul\":8137:8141   */\n      0x22\n        /* \"#utility.yul\":8134:8135   */\n      0x04\n        /* \"#utility.yul\":8127:8142   */\n      mstore\n        /* \"#utility.yul\":8165:8169   */\n      0x24\n        /* \"#utility.yul\":8162:8163   */\n      0x00\n        /* \"#utility.yul\":8155:8170   */\n      revert\n        /* \"#utility.yul\":7962:7964   */\n    tag_243:\n      pop\n        /* \"#utility.yul\":7804:8186   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073d78c13dd71958b196c1f7ac536c4aebcd3f61db34f7ba133c073f10dfb4e8f64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1172:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "360:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "345:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "337:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:5",
														"type": ""
													}
												],
												"src": "14:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "497:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "485:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "527:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "520:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "520:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "520:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "444:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "455:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "466:4:5",
														"type": ""
													}
												],
												"src": "374:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "604:181:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "639:115:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "660:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "669:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "674:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "665:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "665:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "653:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "653:33:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "653:33:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "709:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "699:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "699:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "734:3:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "739:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "727:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "727:17:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "727:17:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "620:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "627:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "617:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:13:5"
															},
															"nodeType": "YulIf",
															"src": "614:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "763:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "774:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "777:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "770:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "770:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "763:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "587:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "590:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "596:3:5",
														"type": ""
													}
												],
												"src": "556:229:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "845:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "855:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "869:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "872:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "865:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "886:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "916:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "922:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "912:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "890:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "963:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "965:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "979:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "987:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "975:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "965:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "943:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "936:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:26:5"
															},
															"nodeType": "YulIf",
															"src": "933:2:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1053:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1074:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1081:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1086:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1077:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1077:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1067:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1067:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1067:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1118:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1121:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1111:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1111:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1111:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1146:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1149:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1139:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1139:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1139:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1009:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1032:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1040:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1029:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1029:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1006:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:38:5"
															},
															"nodeType": "YulIf",
															"src": "1003:2:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "825:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "834:6:5",
														"type": ""
													}
												],
												"src": "790:380:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526b033b2e3c9fd0803ce80000006006553480156200002157600080fd5b5060408051808201825260088152674c6f6b657944414f60c01b6020808301918252835180850190945260058452644c4f4b455960d81b9084015281519192916200006f91600391620001a2565b50805162000085906004906020840190620001a2565b5050600780546001600160a01b03191633908117909155620000b491506a295be96e64066972000000620000ba565b620002aa565b6001600160a01b038216620001155760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000129919062000248565b90915550506001600160a01b038216600090815260208190526040812080548392906200015890849062000248565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001b0906200026d565b90600052602060002090601f016020900481019282620001d457600085556200021f565b82601f10620001ef57805160ff19168380011785556200021f565b828001600101855582156200021f579182015b828111156200021f57825182559160200191906001019062000202565b506200022d92915062000231565b5090565b5b808211156200022d576000815560010162000232565b600082198211156200026857634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806200028257607f821691505b60208210811415620002a457634e487b7160e01b600052602260045260246000fd5b50919050565b610d7280620002ba6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806395d89b4111610097578063a9059cbb11610066578063a9059cbb1461021a578063d1823b281461022d578063d5abeb011461025f578063dd62ed3e1461026757600080fd5b806395d89b41146101db5780639910ed9a146101e3578063a0712d68146101f4578063a457c2d71461020757600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806370a082311461018d57806377b06d01146101b657600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d6102a0565b60405161011a9190610c3a565b60405180910390f35b610136610131366004610bf9565b610332565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610bbe565b61034a565b6040516012815260200161011a565b610136610188366004610bf9565b61036e565b61014a61019b366004610b6b565b6001600160a01b031660009081526020819052604090205490565b6005546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b61010d6103ad565b6007546001600160a01b03166101c3565b610136610202366004610c22565b6103bc565b610136610215366004610bf9565b6104a8565b610136610228366004610bf9565b610552565b61024061023b366004610b6b565b610560565b6040805192151583526001600160a01b0390911660208301520161011a565b60065461014a565b61014a610275366004610b8c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102af90610ce8565b80601f01602080910402602001604051908101604052809291908181526020018280546102db90610ce8565b80156103285780601f106102fd57610100808354040283529160200191610328565b820191906000526020600020905b81548152906001019060200180831161030b57829003601f168201915b5050505050905090565b600033610340818585610656565b5060019392505050565b6000336103588582856107ae565b61036385858561085e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061034090829086906103a8908790610cab565b610656565b6060600480546102af90610ce8565b6005546000906001600160a01b0316331461041e5760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600061042960025490565b6006549091506104398483610cab565b11156104875760405162461bcd60e51b815260206004820152601460248201527f4c4f4b45593a2045786365656473204c696d69740000000000000000000000006044820152606401610415565b60055461049d906001600160a01b031684610a75565b60019150505b919050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105455760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610415565b6103638286868403610656565b60003361034081858561085e565b60075460009081906001600160a01b031633146105bf5760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152606401610415565b6005546001600160a01b0316156106185760405162461bcd60e51b815260206004820152601360248201527f4c6f5374616b6520616c726561647920736574000000000000000000000000006044820152606401610415565b5050600580546001600160a01b039092167fffffffffffffffffffffffff000000000000000000000000000000000000000090921682179055600191565b6001600160a01b0383166106d15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610415565b6001600160a01b03821661074d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610415565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610858578181101561084b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610415565b6108588484848403610656565b50505050565b6001600160a01b0383166108da5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610415565b6001600160a01b0382166109565760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610415565b6001600160a01b038316600090815260208190526040902054818110156109e55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610415565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a1c908490610cab565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a6891815260200190565b60405180910390a3610858565b6001600160a01b038216610acb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610415565b8060026000828254610add9190610cab565b90915550506001600160a01b03821660009081526020819052604081208054839290610b0a908490610cab565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b03811681146104a357600080fd5b600060208284031215610b7c578081fd5b610b8582610b54565b9392505050565b60008060408385031215610b9e578081fd5b610ba783610b54565b9150610bb560208401610b54565b90509250929050565b600080600060608486031215610bd2578081fd5b610bdb84610b54565b9250610be960208501610b54565b9150604084013590509250925092565b60008060408385031215610c0b578182fd5b610c1483610b54565b946020939093013593505050565b600060208284031215610c33578081fd5b5035919050565b6000602080835283518082850152825b81811015610c6657858101830151858201604001528201610c4a565b81811115610c775783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115610ce3577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b600181811c90821680610cfc57607f821691505b60208210811415610d36577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea264697066735822122073d78c13dd71958b196c1f7ac536c4aebcd3f61db34f7ba133c073f10dfb4e8f64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x4C6F6B657944414F PUSH1 0xC0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x4C4F4B4559 PUSH1 0xD8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x6F SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x1A2 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x85 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1A2 JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0xB4 SWAP2 POP PUSH11 0x295BE96E64066972000000 PUSH3 0xBA JUMP JUMPDEST PUSH3 0x2AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x115 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x129 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x158 SWAP1 DUP5 SWAP1 PUSH3 0x248 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1B0 SWAP1 PUSH3 0x26D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1D4 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x21F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1EF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x21F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x21F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x21F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x202 JUMP JUMPDEST POP PUSH3 0x22D SWAP3 SWAP2 POP PUSH3 0x231 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x22D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x232 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x268 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x282 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD72 DUP1 PUSH3 0x2BA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xD1823B28 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x9910ED9A EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x77B06D01 EQ PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST PUSH2 0x14A PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x136 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x14A PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AF SWAP1 PUSH2 0xCE8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DB SWAP1 PUSH2 0xCE8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x328 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x328 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x340 DUP2 DUP6 DUP6 PUSH2 0x656 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x358 DUP6 DUP3 DUP6 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x363 DUP6 DUP6 DUP6 PUSH2 0x85E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x340 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x3A8 SWAP1 DUP8 SWAP1 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2AF SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65640000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x429 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x439 DUP5 DUP4 PUSH2 0xCAB JUMP JUMPDEST GT ISZERO PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C4F4B45593A2045786365656473204C696D6974000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x49D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x415 JUMP JUMPDEST PUSH2 0x363 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x656 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x340 DUP2 DUP6 DUP6 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65640000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F5374616B6520616C72656164792073657400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x415 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH1 0x1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x858 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x415 JUMP JUMPDEST PUSH2 0x858 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x656 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x956 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA1C SWAP1 DUP5 SWAP1 PUSH2 0xCAB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA68 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x415 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xADD SWAP2 SWAP1 PUSH2 0xCAB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB0A SWAP1 DUP5 SWAP1 PUSH2 0xCAB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB85 DUP3 PUSH2 0xB54 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBA7 DUP4 PUSH2 0xB54 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB5 PUSH1 0x20 DUP5 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBD2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBDB DUP5 PUSH2 0xB54 JUMP JUMPDEST SWAP3 POP PUSH2 0xBE9 PUSH1 0x20 DUP6 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC0B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xC14 DUP4 PUSH2 0xB54 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC33 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC66 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC4A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC77 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCE3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCFC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD36 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD78C13DD71958B196C1F7AC536C4AEBCD3F61DB3 0x4F PUSH28 0xA133C073F10DFB4E8F64736F6C634300080400330000000000000000 ",
							"sourceMap": "119:1180:4:-:0;;;214:16;185:45;;265:117;;;;;;;;;-1:-1:-1;1978:113:0;;;;;;;;;;;-1:-1:-1;;;1978:113:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:0;;;;2044:13;;1978:113;;;2044:13;;:5;;:13;:::i;:::-;-1:-1:-1;2067:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;317:5:4::1;:18:::0;;-1:-1:-1;;;;;;317:18:4::1;325:10;317:18:::0;;::::1;::::0;;;346:28:::1;::::0;-1:-1:-1;359:14:4::1;346:5;:28::i;:::-;119:1180:::0;;8402:389:0;-1:-1:-1;;;;;8485:21:0;;8477:65;;;;-1:-1:-1;;;8477:65:0;;216:2:5;8477:65:0;;;198:21:5;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;8477:65:0;;;;;;;;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:0;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:0;;520:25:5;;;-1:-1:-1;;;;;8688:37:0;;;8705:1;;8688:37;;508:2:5;493:18;8688:37:0;;;;;;;8402:389;;:::o;119:1180:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;119:1180:4;;;-1:-1:-1;119:1180:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;556:229:5;596:3;627:1;623:6;620:1;617:13;614:2;;;-1:-1:-1;;;653:33:5;;709:4;706:1;699:15;739:4;660:3;727:17;614:2;-1:-1:-1;770:9:5;;604:181::o;790:380::-;869:1;865:12;;;;912;;;933:2;;987:4;979:6;975:17;965:27;;933:2;1040;1032:6;1029:14;1009:18;1006:38;1003:2;;;1086:10;1081:3;1077:20;1074:1;1067:31;1121:4;1118:1;1111:15;1149:4;1146:1;1139:15;1003:2;;845:325;;;:::o;:::-;119:1180:4;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8188:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:5"
															},
															"nodeType": "YulIf",
															"src": "111:2:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:196:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:126:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "340:6:5"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "348:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:5"
															},
															"nodeType": "YulIf",
															"src": "295:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "366:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "395:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "376:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "366:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:5",
														"type": ""
													}
												],
												"src": "215:196:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:183:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "549:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "558:6:5"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "566:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "524:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "533:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "520:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "545:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:32:5"
															},
															"nodeType": "YulIf",
															"src": "513:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "584:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "613:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "594:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "584:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "632:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "665:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "676:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "642:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "642:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "632:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "461:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "472:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "484:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "492:6:5",
														"type": ""
													}
												],
												"src": "416:270:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:234:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "841:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "850:6:5"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "858:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "843:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "843:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "816:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "825:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "812:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "812:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "837:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "808:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:32:5"
															},
															"nodeType": "YulIf",
															"src": "805:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "876:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "905:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "886:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "924:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "957:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "968:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "953:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "953:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "934:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "924:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "981:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1008:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1019:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1004:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "991:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "991:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "981:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "745:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "756:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "768:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "776:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "784:6:5",
														"type": ""
													}
												],
												"src": "691:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1121:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1167:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1176:6:5"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1169:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1169:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1169:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1142:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1151:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1138:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1138:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1163:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1134:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:32:5"
															},
															"nodeType": "YulIf",
															"src": "1131:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1202:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1231:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1212:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1212:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1202:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1277:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1288:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1273:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1273:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1260:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1260:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1250:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1079:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1090:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1102:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1110:6:5",
														"type": ""
													}
												],
												"src": "1034:264:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1373:120:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1419:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1428:6:5"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1436:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1421:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1421:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1421:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1394:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1403:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1390:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1386:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:32:5"
															},
															"nodeType": "YulIf",
															"src": "1383:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1454:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1477:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1464:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1464:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1339:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1350:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1362:6:5",
														"type": ""
													}
												],
												"src": "1303:190:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1599:125:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1609:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1621:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1632:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1617:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1609:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1666:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1674:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1662:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1662:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1644:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1644:74:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1644:74:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1568:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1579:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1590:4:5",
														"type": ""
													}
												],
												"src": "1498:226:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1824:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1834:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1846:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1842:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1834:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1876:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1901:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1894:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1894:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1887:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1887:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1869:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1869:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1793:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1804:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1815:4:5",
														"type": ""
													}
												],
												"src": "1729:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2044:184:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2054:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2066:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2077:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2062:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2054:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2096:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2121:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2114:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2114:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2107:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2107:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2089:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2089:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2089:41:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2150:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2161:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2146:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2146:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2170:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2178:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2166:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2166:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2139:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2139:83:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2139:83:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2005:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2016:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2024:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2035:4:5",
														"type": ""
													}
												],
												"src": "1921:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2354:541:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2364:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2374:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2368:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2392:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2403:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2385:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2385:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2415:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2435:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2429:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2419:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2462:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2473:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2458:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2458:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2451:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2494:13:5",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "2503:4:5"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2498:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2566:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2595:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2606:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2591:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2591:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2610:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2587:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2587:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2629:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2637:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2625:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2625:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2641:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2621:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2621:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2615:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2615:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2580:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2580:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2527:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2530:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2524:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2524:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2538:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2540:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2549:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2552:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2545:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2545:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2540:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2520:3:5",
																"statements": []
															},
															"src": "2516:140:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2690:69:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2719:9:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2730:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2715:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2715:22:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2739:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2711:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2711:31:5"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "2744:4:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2704:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:45:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2704:45:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2671:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2674:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2668:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:13:5"
															},
															"nodeType": "YulIf",
															"src": "2665:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2768:121:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2784:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2803:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2811:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2799:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2799:15:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2816:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2795:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2795:88:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2780:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2780:104:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2886:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:113:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2768:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2323:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2334:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2345:4:5",
														"type": ""
													}
												],
												"src": "2233:662:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3074:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3091:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3102:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3084:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3084:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3136:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3141:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3114:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3164:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3175:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3160:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3160:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3180:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3153:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3153:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3235:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3246:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3231:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3231:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3251:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3224:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3224:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3224:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3266:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3278:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3289:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3274:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3274:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3266:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3051:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3065:4:5",
														"type": ""
													}
												],
												"src": "2900:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3478:169:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3495:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3506:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3488:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3529:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3540:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3525:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3525:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3545:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3564:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3564:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3584:21:5",
																		"type": "",
																		"value": "LoStake already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3557:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:49:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3557:49:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3615:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3627:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3638:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3623:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3615:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_072cc2bce1765f498e57550dcdc4f9ab1a052ff702e9c556a2d2ee9993573db0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3455:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3469:4:5",
														"type": ""
													}
												],
												"src": "3304:343:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3826:162:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3843:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3854:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3836:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3836:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3877:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3888:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3873:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3873:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3893:2:5",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3866:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3866:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3916:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3927:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3932:14:5",
																		"type": "",
																		"value": "Unauthorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3905:42:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3956:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3968:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3979:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3964:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3956:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3803:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3817:4:5",
														"type": ""
													}
												],
												"src": "3652:336:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4167:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4184:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4177:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4177:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4177:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4218:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4229:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4214:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4214:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4234:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4207:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4207:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4257:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4268:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4253:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4253:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4273:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4246:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4246:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4328:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4339:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4324:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4344:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4317:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4317:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4317:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4358:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4370:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4381:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4366:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4358:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4144:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4158:4:5",
														"type": ""
													}
												],
												"src": "3993:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4570:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4587:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4598:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4580:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4580:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4580:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4621:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4632:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4617:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4617:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4637:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4610:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4610:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4610:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4660:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4671:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4656:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4656:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4676:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4649:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4649:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4649:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4717:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4729:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4725:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4717:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4547:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4561:4:5",
														"type": ""
													}
												],
												"src": "4396:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4928:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4945:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4956:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4938:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4938:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4979:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4990:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4975:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4975:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4995:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4968:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5018:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5029:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5014:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5014:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5034:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5007:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5007:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5007:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5089:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5100:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5085:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5105:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5078:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5078:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5078:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5123:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5135:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5146:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5123:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4905:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4919:4:5",
														"type": ""
													}
												],
												"src": "4754:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5345:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5382:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5375:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5375:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5441:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5512:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5485:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5529:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5537:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5529:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5312:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:5",
														"type": ""
													}
												],
												"src": "5161:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5741:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5758:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5769:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5751:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5751:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5751:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5792:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5803:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5788:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5788:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5808:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5781:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5781:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5781:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5831:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5842:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5827:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5827:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5847:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5820:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5820:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5820:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5902:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5913:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5898:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5898:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5918:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5891:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5891:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5891:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5934:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5946:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5957:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5942:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5942:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5934:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5718:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5732:4:5",
														"type": ""
													}
												],
												"src": "5567:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6146:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6163:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6174:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6156:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6156:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6156:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6197:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6208:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6193:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6193:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6213:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6186:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6186:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6186:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6236:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6247:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6232:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6232:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6252:22:5",
																		"type": "",
																		"value": "LOKEY: Exceeds Limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6225:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6225:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6225:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6284:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6296:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6307:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6292:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6292:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6284:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc3050eef91b6ea1da8b76f77cddca1ceafc9e9b7bd78b16509a333b04b0c718__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6123:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6137:4:5",
														"type": ""
													}
												],
												"src": "5972:344:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6495:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6512:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6523:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6505:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6505:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6505:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6546:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6557:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6542:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6542:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6562:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6535:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6535:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6535:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6585:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6596:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6581:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6581:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6601:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6574:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6574:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6574:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6656:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6667:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6652:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6652:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6672:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6645:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6645:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6645:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6689:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6701:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6712:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6689:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6472:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6486:4:5",
														"type": ""
													}
												],
												"src": "6321:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6901:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6918:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6929:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6911:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6911:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6911:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6952:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6963:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6948:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6948:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6968:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6941:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6941:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6941:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6991:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7002:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6987:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6987:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7007:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6980:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6980:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6980:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7050:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7062:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7073:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7058:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7058:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7050:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6878:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6892:4:5",
														"type": ""
													}
												],
												"src": "6727:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7188:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7198:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7210:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7221:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7206:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7198:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7240:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7251:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7233:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7233:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7233:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7157:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7168:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7179:4:5",
														"type": ""
													}
												],
												"src": "7087:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7366:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7376:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7388:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7399:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7384:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7376:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7418:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7433:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7441:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7429:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7429:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7411:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7411:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7411:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7335:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7346:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7357:4:5",
														"type": ""
													}
												],
												"src": "7269:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7506:238:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7541:172:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "7562:3:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7567:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7555:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7555:90:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7555:90:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7665:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7668:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7658:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7658:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7658:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "7693:3:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7698:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7686:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7686:17:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7686:17:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7522:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7529:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7525:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7525:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7519:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7519:13:5"
															},
															"nodeType": "YulIf",
															"src": "7516:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7722:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7733:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7736:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7729:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7729:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7722:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7489:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7492:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7498:3:5",
														"type": ""
													}
												],
												"src": "7458:286:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7804:382:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7814:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7828:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7831:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7824:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7824:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7814:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7845:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7875:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7881:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7871:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7871:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7849:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7922:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7924:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7938:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7946:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7934:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7934:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7924:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7902:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7895:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7895:26:5"
															},
															"nodeType": "YulIf",
															"src": "7892:2:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8012:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8036:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8026:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8026:88:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8026:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8134:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8137:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8127:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8127:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8162:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8165:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8155:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8155:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8155:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7968:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7991:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7999:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7988:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7988:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7965:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7965:38:5"
															},
															"nodeType": "YulIf",
															"src": "7962:2:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7784:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7793:6:5",
														"type": ""
													}
												],
												"src": "7749:437:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_072cc2bce1765f498e57550dcdc4f9ab1a052ff702e9c556a2d2ee9993573db0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"LoStake already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Unauthorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dc3050eef91b6ea1da8b76f77cddca1ceafc9e9b7bd78b16509a333b04b0c718__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"LOKEY: Exceeds Limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c806395d89b4111610097578063a9059cbb11610066578063a9059cbb1461021a578063d1823b281461022d578063d5abeb011461025f578063dd62ed3e1461026757600080fd5b806395d89b41146101db5780639910ed9a146101e3578063a0712d68146101f4578063a457c2d71461020757600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806370a082311461018d57806377b06d01146101b657600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d6102a0565b60405161011a9190610c3a565b60405180910390f35b610136610131366004610bf9565b610332565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610bbe565b61034a565b6040516012815260200161011a565b610136610188366004610bf9565b61036e565b61014a61019b366004610b6b565b6001600160a01b031660009081526020819052604090205490565b6005546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b61010d6103ad565b6007546001600160a01b03166101c3565b610136610202366004610c22565b6103bc565b610136610215366004610bf9565b6104a8565b610136610228366004610bf9565b610552565b61024061023b366004610b6b565b610560565b6040805192151583526001600160a01b0390911660208301520161011a565b60065461014a565b61014a610275366004610b8c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102af90610ce8565b80601f01602080910402602001604051908101604052809291908181526020018280546102db90610ce8565b80156103285780601f106102fd57610100808354040283529160200191610328565b820191906000526020600020905b81548152906001019060200180831161030b57829003601f168201915b5050505050905090565b600033610340818585610656565b5060019392505050565b6000336103588582856107ae565b61036385858561085e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061034090829086906103a8908790610cab565b610656565b6060600480546102af90610ce8565b6005546000906001600160a01b0316331461041e5760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600061042960025490565b6006549091506104398483610cab565b11156104875760405162461bcd60e51b815260206004820152601460248201527f4c4f4b45593a2045786365656473204c696d69740000000000000000000000006044820152606401610415565b60055461049d906001600160a01b031684610a75565b60019150505b919050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105455760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610415565b6103638286868403610656565b60003361034081858561085e565b60075460009081906001600160a01b031633146105bf5760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152606401610415565b6005546001600160a01b0316156106185760405162461bcd60e51b815260206004820152601360248201527f4c6f5374616b6520616c726561647920736574000000000000000000000000006044820152606401610415565b5050600580546001600160a01b039092167fffffffffffffffffffffffff000000000000000000000000000000000000000090921682179055600191565b6001600160a01b0383166106d15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610415565b6001600160a01b03821661074d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610415565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610858578181101561084b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610415565b6108588484848403610656565b50505050565b6001600160a01b0383166108da5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610415565b6001600160a01b0382166109565760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610415565b6001600160a01b038316600090815260208190526040902054818110156109e55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610415565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a1c908490610cab565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a6891815260200190565b60405180910390a3610858565b6001600160a01b038216610acb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610415565b8060026000828254610add9190610cab565b90915550506001600160a01b03821660009081526020819052604081208054839290610b0a908490610cab565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b03811681146104a357600080fd5b600060208284031215610b7c578081fd5b610b8582610b54565b9392505050565b60008060408385031215610b9e578081fd5b610ba783610b54565b9150610bb560208401610b54565b90509250929050565b600080600060608486031215610bd2578081fd5b610bdb84610b54565b9250610be960208501610b54565b9150604084013590509250925092565b60008060408385031215610c0b578182fd5b610c1483610b54565b946020939093013593505050565b600060208284031215610c33578081fd5b5035919050565b6000602080835283518082850152825b81811015610c6657858101830151858201604001528201610c4a565b81811115610c775783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115610ce3577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b600181811c90821680610cfc57607f821691505b60208210811415610d36577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea264697066735822122073d78c13dd71958b196c1f7ac536c4aebcd3f61db34f7ba133c073f10dfb4e8f64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xD1823B28 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x9910ED9A EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x77B06D01 EQ PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST PUSH2 0x14A PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x136 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x14A PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AF SWAP1 PUSH2 0xCE8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DB SWAP1 PUSH2 0xCE8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x328 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x328 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x340 DUP2 DUP6 DUP6 PUSH2 0x656 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x358 DUP6 DUP3 DUP6 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x363 DUP6 DUP6 DUP6 PUSH2 0x85E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x340 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x3A8 SWAP1 DUP8 SWAP1 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2AF SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65640000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x429 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x439 DUP5 DUP4 PUSH2 0xCAB JUMP JUMPDEST GT ISZERO PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C4F4B45593A2045786365656473204C696D6974000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x49D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x415 JUMP JUMPDEST PUSH2 0x363 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x656 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x340 DUP2 DUP6 DUP6 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65640000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F5374616B6520616C72656164792073657400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x415 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH1 0x1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x858 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x415 JUMP JUMPDEST PUSH2 0x858 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x656 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x956 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA1C SWAP1 DUP5 SWAP1 PUSH2 0xCAB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA68 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x415 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xADD SWAP2 SWAP1 PUSH2 0xCAB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB0A SWAP1 DUP5 SWAP1 PUSH2 0xCAB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB85 DUP3 PUSH2 0xB54 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBA7 DUP4 PUSH2 0xB54 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB5 PUSH1 0x20 DUP5 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBD2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBDB DUP5 PUSH2 0xB54 JUMP JUMPDEST SWAP3 POP PUSH2 0xBE9 PUSH1 0x20 DUP6 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC0B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xC14 DUP4 PUSH2 0xB54 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC33 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC66 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC4A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC77 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCE3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCFC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD36 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD78C13DD71958B196C1F7AC536C4AEBCD3F61DB3 0x4F PUSH28 0xA133C073F10DFB4E8F64736F6C634300080400330000000000000000 ",
							"sourceMap": "119:1180:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1894:14:5;;1887:22;1869:41;;1857:2;1842:18;4433:197:0;1824:92:5;3244:106:0;3331:12;;3244:106;;;7233:25:5;;;7221:2;7206:18;3244:106:0;7188:76:5;5192:286:0;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;7411:36:5;;7399:2;7384:18;3093:91:0;7366:87:5;5873:234:0;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:0;3482:7;3508:18;;;;;;;;;;;;3408:125;1119:87:4;1190:8;;-1:-1:-1;;;;;1190:8:4;1119:87;;;-1:-1:-1;;;;;1662:55:5;;;1644:74;;1632:2;1617:18;1119:87:4;1599:125:5;2367:102:0;;;:::i;1214:82:4:-;1283:5;;-1:-1:-1;;;;;1283:5:4;1214:82;;497:248;;;;;;:::i;:::-;;:::i;6594:427:0:-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;753:263:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;2114:14:5;;2107:22;2089:41;;-1:-1:-1;;;;;2166:55:5;;;2161:2;2146:18;;2139:83;2062:18;753:263:4;2044:184:5;1024:87:4;1093:10;;1024:87;;3976:149:0;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:0;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:3;4570:32:0;719:10:3;4586:7:0;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:0;;4433:197;-1:-1:-1;;;4433:197:0:o;5192:286::-;5319:4;719:10:3;5375:38:0;5391:4;719:10:3;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;5873:234::-;719:10:3;5961:4:0;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:0;;;;;;;;;;5961:4;;719:10:3;6015:64:0;;719:10:3;;4091:27:0;;6040:38;;6068:10;;6040:38;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;497:248:4:-;444:8;;555:4;;-1:-1:-1;;;;;444:8:4;430:10;:22;422:47;;;;-1:-1:-1;;;422:47:4;;3854:2:5;422:47:4;;;3836:21:5;3893:2;3873:18;;;3866:30;3932:14;3912:18;;;3905:42;3964:18;;422:47:4;;;;;;;;;572:17:::1;592:13;3331:12:0::0;;;3244:106;592:13:4::1;646:10;::::0;572:33;;-1:-1:-1;624:18:4::1;636:6:::0;572:33;624:18:::1;:::i;:::-;:32;;616:65;;;::::0;-1:-1:-1;;;616:65:4;;6174:2:5;616:65:4::1;::::0;::::1;6156:21:5::0;6213:2;6193:18;;;6186:30;6252:22;6232:18;;;6225:50;6292:18;;616:65:4::1;6146:170:5::0;616:65:4::1;698:8;::::0;692:23:::1;::::0;-1:-1:-1;;;;;698:8:4::1;708:6:::0;692:5:::1;:23::i;:::-;733:4;726:11;;;480:1;497:248:::0;;;:::o;6594:427:0:-;719:10:3;6687:4:0;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:0;;;;;;;;;;6687:4;;719:10:3;6831:15:0;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:0;;6523:2:5;6803:85:0;;;6505:21:5;6562:2;6542:18;;;6535:30;6601:34;6581:18;;;6574:62;6672:7;6652:18;;;6645:35;6697:19;;6803:85:0;6495:227:5;6803:85:0;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:3;3862:28:0;719:10:3;3879:2:0;3883:6;3862:9;:28::i;753:263:4:-;856:5;;808:4;;;;-1:-1:-1;;;;;856:5:4;842:10;:19;834:44;;;;-1:-1:-1;;;834:44:4;;3854:2:5;834:44:4;;;3836:21:5;3893:2;3873:18;;;3866:30;3932:14;3912:18;;;3905:42;3964:18;;834:44:4;3826:162:5;834:44:4;897:8;;-1:-1:-1;;;;;897:8:4;:22;889:54;;;;-1:-1:-1;;;889:54:4;;3506:2:5;889:54:4;;;3488:21:5;3545:2;3525:18;;;3518:30;3584:21;3564:18;;;3557:49;3623:18;;889:54:4;3478:169:5;889:54:4;-1:-1:-1;;954:8:4;:20;;-1:-1:-1;;;;;954:20:4;;;;;;;;;;;;;753:263::o;10110:370:0:-;-1:-1:-1;;;;;10241:19:0;;10233:68;;;;-1:-1:-1;;;10233:68:0;;5769:2:5;10233:68:0;;;5751:21:5;5808:2;5788:18;;;5781:30;5847:34;5827:18;;;5820:62;5918:6;5898:18;;;5891:34;5942:19;;10233:68:0;5741:226:5;10233:68:0;-1:-1:-1;;;;;10319:21:0;;10311:68;;;;-1:-1:-1;;;10311:68:0;;4195:2:5;10311:68:0;;;4177:21:5;4234:2;4214:18;;;4207:30;4273:34;4253:18;;;4246:62;4344:4;4324:18;;;4317:32;4366:19;;10311:68:0;4167:224:5;10311:68:0;-1:-1:-1;;;;;10390:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;7233:25:5;;;10441:32:0;;7206:18:5;10441:32:0;;;;;;;10110:370;;;:::o;10761:441::-;-1:-1:-1;;;;;4091:18:0;;;10891:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10977:17;10957:37;;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:0;;4598:2:5;11010:68:0;;;4580:21:5;4637:2;4617:18;;;4610:30;4676:31;4656:18;;;4649:59;4725:18;;11010:68:0;4570:179:5;11010:68:0;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10761:441;;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:0;;7593:68;;;;-1:-1:-1;;;7593:68:0;;5363:2:5;7593:68:0;;;5345:21:5;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;5512:7;5492:18;;;5485:35;5537:19;;7593:68:0;5335:227:5;7593:68:0;-1:-1:-1;;;;;7679:16:0;;7671:64;;;;-1:-1:-1;;;7671:64:0;;3102:2:5;7671:64:0;;;3084:21:5;3141:2;3121:18;;;3114:30;3180:34;3160:18;;;3153:62;3251:5;3231:18;;;3224:33;3274:19;;7671:64:0;3074:225:5;7671:64:0;-1:-1:-1;;;;;7817:15:0;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:0;;4956:2:5;7842:72:0;;;4938:21:5;4995:2;4975:18;;;4968:30;5034:34;5014:18;;;5007:62;5105:8;5085:18;;;5078:36;5131:19;;7842:72:0;4928:228:5;7842:72:0;-1:-1:-1;;;;;7948:15:0;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:0;8054:4;-1:-1:-1;;;;;8045:26:0;;8064:6;8045:26;;;;7233:25:5;;7221:2;7206:18;;7188:76;8045:26:0;;;;;;;;8082:37;11786:121;8402:389;-1:-1:-1;;;;;8485:21:0;;8477:65;;;;-1:-1:-1;;;8477:65:0;;6929:2:5;8477:65:0;;;6911:21:5;6968:2;6948:18;;;6941:30;7007:33;6987:18;;;6980:61;7058:18;;8477:65:0;6901:181:5;8477:65:0;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:0;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:0;;7233:25:5;;;-1:-1:-1;;;;;8688:37:0;;;8705:1;;8688:37;;7221:2:5;7206:18;8688:37:0;;;;;;;8402:389;;:::o;14:196:5:-;82:20;;-1:-1:-1;;;;;131:54:5;;121:65;;111:2;;200:1;197;190:12;215:196;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;:::-;366:39;285:126;-1:-1:-1;;;285:126:5:o;416:270::-;484:6;492;545:2;533:9;524:7;520:23;516:32;513:2;;;566:6;558;551:22;513:2;594:29;613:9;594:29;:::i;:::-;584:39;;642:38;676:2;665:9;661:18;642:38;:::i;:::-;632:48;;503:183;;;;;:::o;691:338::-;768:6;776;784;837:2;825:9;816:7;812:23;808:32;805:2;;;858:6;850;843:22;805:2;886:29;905:9;886:29;:::i;:::-;876:39;;934:38;968:2;957:9;953:18;934:38;:::i;:::-;924:48;;1019:2;1008:9;1004:18;991:32;981:42;;795:234;;;;;:::o;1034:264::-;1102:6;1110;1163:2;1151:9;1142:7;1138:23;1134:32;1131:2;;;1184:6;1176;1169:22;1131:2;1212:29;1231:9;1212:29;:::i;:::-;1202:39;1288:2;1273:18;;;;1260:32;;-1:-1:-1;;;1121:177:5:o;1303:190::-;1362:6;1415:2;1403:9;1394:7;1390:23;1386:32;1383:2;;;1436:6;1428;1421:22;1383:2;-1:-1:-1;1464:23:5;;1373:120;-1:-1:-1;1373:120:5:o;2233:662::-;2345:4;2374:2;2403;2392:9;2385:21;2435:6;2429:13;2478:6;2473:2;2462:9;2458:18;2451:34;2503:4;2516:140;2530:6;2527:1;2524:13;2516:140;;;2625:14;;;2621:23;;2615:30;2591:17;;;2610:2;2587:26;2580:66;2545:10;;2516:140;;;2674:6;2671:1;2668:13;2665:2;;;2744:4;2739:2;2730:6;2719:9;2715:22;2711:31;2704:45;2665:2;-1:-1:-1;2811:2:5;2799:15;2816:66;2795:88;2780:104;;;;2886:2;2776:113;;2354:541;-1:-1:-1;;;2354:541:5:o;7458:286::-;7498:3;7529:1;7525:6;7522:1;7519:13;7516:2;;;7567:77;7562:3;7555:90;7668:4;7665:1;7658:15;7698:4;7693:3;7686:17;7516:2;-1:-1:-1;7729:9:5;;7506:238::o;7749:437::-;7828:1;7824:12;;;;7871;;;7892:2;;7946:4;7938:6;7934:17;7924:27;;7892:2;7999;7991:6;7988:14;7968:18;7965:38;7962:2;;;8036:77;8033:1;8026:88;8137:4;8134:1;8127:15;8165:4;8162:1;8155:15;7962:2;;7804:382;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "688400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22547",
								"balanceOf(address)": "1307",
								"decimals()": "200",
								"decreaseAllowance(address,uint256)": "23589",
								"increaseAllowance(address,uint256)": "23590",
								"maxSupply()": "1058",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"setLoStake(address)": "22999",
								"symbol()": "infinite",
								"totalSupply()": "1049",
								"transfer(address,uint256)": "44404",
								"transferFrom(address,address,uint256)": "infinite",
								"viewAdmin()": "1076",
								"viewLoStake()": "1109"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 214,
									"end": 230,
									"name": "PUSH",
									"source": 4,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 185,
									"end": 230,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 185,
									"end": 230,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 265,
									"end": 382,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 265,
									"end": 382,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 265,
									"end": 382,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 265,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 265,
									"end": 382,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 265,
									"end": 382,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 265,
									"end": 382,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 265,
									"end": 382,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 265,
									"end": 382,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 265,
									"end": 382,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C6F6B657944414F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C4F4B4559"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 317,
									"end": 322,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 317,
									"end": 335,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 317,
									"end": 335,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 317,
									"end": 335,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 325,
									"end": 335,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 317,
									"end": 335,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 317,
									"end": 335,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 317,
									"end": 335,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 317,
									"end": 335,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 317,
									"end": 335,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 317,
									"end": 335,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 346,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 346,
									"end": 374,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 359,
									"end": 373,
									"name": "PUSH",
									"source": 4,
									"value": "295BE96E64066972000000"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 346,
									"end": 374,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 346,
									"end": 374,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 346,
									"end": 374,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8485,
									"end": 8506,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8485,
									"end": 8506,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 294,
									"end": 327,
									"name": "PUSH",
									"source": 5,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 267,
									"end": 328,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8629,
									"end": 8635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8625,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8613,
									"end": 8625,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8654,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8667,
									"end": 8673,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8667,
									"end": 8673,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8654,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8667,
									"end": 8673,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8667,
									"end": 8673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 520,
									"end": 545,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8705,
									"end": 8706,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8705,
									"end": 8706,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 493,
									"end": 511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 556,
									"end": 785,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 556,
									"end": 785,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 596,
									"end": 599,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 627,
									"end": 628,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 623,
									"end": 629,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 620,
									"end": 621,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 617,
									"end": 630,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 614,
									"end": 616,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 614,
									"end": 616,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 653,
									"end": 686,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 653,
									"end": 686,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 709,
									"end": 713,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 706,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 699,
									"end": 714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 739,
									"end": 743,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 660,
									"end": 663,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 727,
									"end": 744,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 614,
									"end": 616,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 614,
									"end": 616,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 770,
									"end": 779,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 770,
									"end": 779,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 604,
									"end": 785,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 790,
									"end": 1170,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 790,
									"end": 1170,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 869,
									"end": 870,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 865,
									"end": 877,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 865,
									"end": 877,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 865,
									"end": 877,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 865,
									"end": 877,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 912,
									"end": 924,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 912,
									"end": 924,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 912,
									"end": 924,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 933,
									"end": 935,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 933,
									"end": 935,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 987,
									"end": 991,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 979,
									"end": 985,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 975,
									"end": 992,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 965,
									"end": 992,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 965,
									"end": 992,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 933,
									"end": 935,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 933,
									"end": 935,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1042,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1032,
									"end": 1038,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1029,
									"end": 1043,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1027,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1006,
									"end": 1044,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1005,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1003,
									"end": 1005,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1081,
									"end": 1084,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1077,
									"end": 1097,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1067,
									"end": 1098,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1121,
									"end": 1125,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1118,
									"end": 1119,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1111,
									"end": 1126,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1153,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1146,
									"end": 1147,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1139,
									"end": 1154,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1005,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1003,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1005,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1170,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1170,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1170,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1170,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1170,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 845,
									"end": 1170,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 1299,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073d78c13dd71958b196c1f7ac536c4aebcd3f61db34f7ba133c073f10dfb4e8f64736f6c63430008040033",
									".code": [
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "D1823B28"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "D5ABEB01"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "9910ED9A"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "A0712D68"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "77B06D01"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 119,
											"end": 1299,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1908,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1909,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1824,
											"end": 1916,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7233,
											"end": 7258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7233,
											"end": 7258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7223,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7188,
											"end": 7264,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7411,
											"end": 7447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7411,
											"end": 7447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7399,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7366,
											"end": 7453,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1198,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1190,
											"end": 1198,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1190,
											"end": 1198,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1717,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1718,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1718,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1632,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1599,
											"end": 1724,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1296,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1214,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1214,
											"end": 1296,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 497,
											"end": 745,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 497,
											"end": 745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 497,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 497,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 497,
											"end": 745,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 497,
											"end": 745,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 497,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 497,
											"end": 745,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 497,
											"end": 745,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 497,
											"end": 745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 497,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 497,
											"end": 745,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2128,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2114,
											"end": 2128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2129,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2166,
											"end": 2221,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2221,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2221,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2163,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2146,
											"end": 2164,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2164,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2044,
											"end": 2228,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1111,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1024,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1093,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1093,
											"end": 1103,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1024,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1024,
											"end": 1111,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 497,
											"end": 745,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 497,
											"end": 745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 444,
											"end": 452,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 444,
											"end": 452,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 555,
											"end": 559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 444,
											"end": 452,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 430,
											"end": 440,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 430,
											"end": 452,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 422,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 422,
											"end": 469,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 422,
											"end": 469,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 469,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 422,
											"end": 469,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 422,
											"end": 469,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 469,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 469,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 422,
											"end": 469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3893,
											"end": 3895,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3896,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 3946,
											"name": "PUSH",
											"source": 5,
											"value": "556E617574686F72697A65640000000000000000000000000000000000000000"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 3947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3964,
											"end": 3982,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3964,
											"end": 3982,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 469,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 422,
											"end": 469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 422,
											"end": 469,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 469,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 422,
											"end": 469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 422,
											"end": 469,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 422,
											"end": 469,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 422,
											"end": 469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 422,
											"end": 469,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 422,
											"end": 469,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 422,
											"end": 469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 572,
											"end": 589,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 605,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 592,
											"end": 605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 646,
											"end": 656,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 646,
											"end": 656,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 572,
											"end": 605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 572,
											"end": 605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 624,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 636,
											"end": 642,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 572,
											"end": 605,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 624,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 624,
											"end": 642,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 642,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 624,
											"end": 642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 616,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 616,
											"end": 681,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 616,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 681,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 616,
											"end": 681,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 681,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6176,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 616,
											"end": 681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 616,
											"end": 681,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6177,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6215,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 6193,
											"end": 6211,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6193,
											"end": 6211,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6193,
											"end": 6211,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6186,
											"end": 6216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6252,
											"end": 6274,
											"name": "PUSH",
											"source": 5,
											"value": "4C4F4B45593A2045786365656473204C696D6974000000000000000000000000"
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6275,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6292,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6292,
											"end": 6310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 616,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6146,
											"end": 6316,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 616,
											"end": 681,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 616,
											"end": 681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 698,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 698,
											"end": 706,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 692,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 692,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 698,
											"end": 706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 692,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 692,
											"end": 715,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 692,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 733,
											"end": 737,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 726,
											"end": 737,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 726,
											"end": 737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 726,
											"end": 737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 480,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 480,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 497,
											"end": 745,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 497,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 497,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 497,
											"end": 745,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6523,
											"end": 6525,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6564,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6535,
											"end": 6565,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6635,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "PUSH",
											"source": 5,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6680,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6495,
											"end": 6722,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 856,
											"end": 861,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 856,
											"end": 861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 808,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 808,
											"end": 812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 808,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 856,
											"end": 861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 842,
											"end": 852,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 842,
											"end": 861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 834,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 834,
											"end": 878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 834,
											"end": 878,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 834,
											"end": 878,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 834,
											"end": 878,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 834,
											"end": 878,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 834,
											"end": 878,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 834,
											"end": 878,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 834,
											"end": 878,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3893,
											"end": 3895,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3896,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 3946,
											"name": "PUSH",
											"source": 5,
											"value": "556E617574686F72697A65640000000000000000000000000000000000000000"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 3947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3964,
											"end": 3982,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3964,
											"end": 3982,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 834,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3826,
											"end": 3988,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 834,
											"end": 878,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 834,
											"end": 878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 897,
											"end": 905,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 897,
											"end": 905,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 897,
											"end": 905,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 897,
											"end": 919,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 889,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 889,
											"end": 943,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 889,
											"end": 943,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 943,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 889,
											"end": 943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 889,
											"end": 943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 889,
											"end": 943,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 889,
											"end": 943,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 889,
											"end": 943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3547,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3548,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3605,
											"name": "PUSH",
											"source": 5,
											"value": "4C6F5374616B6520616C72656164792073657400000000000000000000000000"
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3606,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3641,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3623,
											"end": 3641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 889,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 889,
											"end": 943,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 889,
											"end": 943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 954,
											"end": 962,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 954,
											"end": 974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 974,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 954,
											"end": 974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 974,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 954,
											"end": 974,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 954,
											"end": 974,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 954,
											"end": 974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 974,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 954,
											"end": 974,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 954,
											"end": 974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 954,
											"end": 974,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 954,
											"end": 974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 974,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 954,
											"end": 974,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 954,
											"end": 974,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 753,
											"end": 1016,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5771,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5751,
											"end": 5772,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5810,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5847,
											"end": 5881,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5820,
											"end": 5882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 5924,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5898,
											"end": 5916,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5898,
											"end": 5916,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5891,
											"end": 5925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5741,
											"end": 5967,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4198,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4236,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4207,
											"end": 4237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4273,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4246,
											"end": 4308,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4317,
											"end": 4349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4385,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4366,
											"end": 4385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4167,
											"end": 4391,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7258,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7233,
											"end": 7258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7233,
											"end": 7258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 10994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4598,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4601,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4637,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4617,
											"end": 4635,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4617,
											"end": 4635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 4635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4676,
											"end": 4707,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4656,
											"end": 4674,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4656,
											"end": 4674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 4708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4570,
											"end": 4749,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5366,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5475,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5414,
											"end": 5476,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5519,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5485,
											"end": 5520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5556,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5537,
											"end": 5556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5335,
											"end": 5562,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3105,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3143,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3144,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3214,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 3160,
											"end": 3178,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3160,
											"end": 3178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3153,
											"end": 3215,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3256,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3257,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3274,
											"end": 3293,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3274,
											"end": 3293,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3074,
											"end": 3299,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4956,
											"end": 4958,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4938,
											"end": 4959,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4995,
											"end": 4997,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 4998,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5068,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5014,
											"end": 5032,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5014,
											"end": 5032,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5014,
											"end": 5032,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5069,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5113,
											"name": "PUSH",
											"source": 5,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5085,
											"end": 5103,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5085,
											"end": 5103,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5085,
											"end": 5103,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5078,
											"end": 5114,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4928,
											"end": 5156,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7233,
											"end": 7258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7223,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7264,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8402,
											"end": 8791,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8402,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8485,
											"end": 8506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6931,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6968,
											"end": 6970,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6941,
											"end": 6971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7040,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6980,
											"end": 7041,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6901,
											"end": 7082,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8625,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8613,
											"end": 8625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7233,
											"end": 7258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7233,
											"end": 7258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7223,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8402,
											"end": 8791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8402,
											"end": 8791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8402,
											"end": 8791,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 215,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 215,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 295,
											"end": 297,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 295,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 295,
											"end": 297,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 348,
											"end": 354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 340,
											"end": 346,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 333,
											"end": 355,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 295,
											"end": 297,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 295,
											"end": 297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 376,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 376,
											"end": 405,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 405,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 376,
											"end": 405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 405,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 285,
											"end": 411,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 285,
											"end": 411,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 416,
											"end": 686,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 416,
											"end": 686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 484,
											"end": 490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 498,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 545,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 524,
											"end": 531,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 516,
											"end": 548,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 513,
											"end": 515,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 513,
											"end": 515,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 566,
											"end": 572,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 558,
											"end": 564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 551,
											"end": 573,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 513,
											"end": 515,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 513,
											"end": 515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 613,
											"end": 622,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 594,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 594,
											"end": 623,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 623,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 594,
											"end": 623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 584,
											"end": 623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 584,
											"end": 623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 676,
											"end": 678,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 674,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 661,
											"end": 679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 642,
											"end": 680,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 680,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 642,
											"end": 680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 632,
											"end": 680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 632,
											"end": 680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 503,
											"end": 686,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 503,
											"end": 686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 503,
											"end": 686,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 503,
											"end": 686,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 503,
											"end": 686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 503,
											"end": 686,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 691,
											"end": 1029,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 691,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 768,
											"end": 774,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 784,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 825,
											"end": 834,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 816,
											"end": 823,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 812,
											"end": 835,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 808,
											"end": 840,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 805,
											"end": 807,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 805,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 805,
											"end": 807,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 858,
											"end": 864,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 856,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 843,
											"end": 865,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 805,
											"end": 807,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 805,
											"end": 807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 886,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 886,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 876,
											"end": 915,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 876,
											"end": 915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 934,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 966,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 953,
											"end": 971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 934,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 934,
											"end": 972,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 972,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 934,
											"end": 972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 972,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 924,
											"end": 972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1022,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1023,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1023,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1029,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1298,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1034,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1149,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1166,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1191,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1212,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1231,
											"end": 1240,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1212,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1212,
											"end": 1241,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1212,
											"end": 1241,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1212,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1241,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1292,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1292,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1121,
											"end": 1298,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1303,
											"end": 1493,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1303,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1368,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1401,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1413,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1418,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1442,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1443,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1464,
											"end": 1487,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1464,
											"end": 1487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1493,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2233,
											"end": 2895,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2233,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2376,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2405,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2401,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2441,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2471,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2656,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2516,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2530,
											"end": 2536,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2528,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2656,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2516,
											"end": 2656,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2639,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2644,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2608,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2555,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2516,
											"end": 2656,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2656,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2516,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2680,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2681,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2667,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2665,
											"end": 2667,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2748,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2739,
											"end": 2741,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2736,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 2728,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2749,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2667,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2665,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2799,
											"end": 2814,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 2882,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 2795,
											"end": 2883,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2884,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2884,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2886,
											"end": 2888,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2889,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2895,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2354,
											"end": 2895,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7458,
											"end": 7744,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 7458,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7530,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7525,
											"end": 7531,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7522,
											"end": 7523,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7519,
											"end": 7532,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7516,
											"end": 7518,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7516,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 7516,
											"end": 7518,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7644,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7562,
											"end": 7565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7555,
											"end": 7645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7668,
											"end": 7672,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7665,
											"end": 7666,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7658,
											"end": 7673,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7698,
											"end": 7702,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7693,
											"end": 7696,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 7703,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7516,
											"end": 7518,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 7516,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7729,
											"end": 7738,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7729,
											"end": 7738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7506,
											"end": 7744,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7749,
											"end": 8186,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 7749,
											"end": 8186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7828,
											"end": 7829,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7824,
											"end": 7836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 7836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 7836,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 7836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7871,
											"end": 7883,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7871,
											"end": 7883,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7871,
											"end": 7883,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7892,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7892,
											"end": 7894,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7946,
											"end": 7950,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 7938,
											"end": 7944,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7934,
											"end": 7951,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 7951,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 7951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7892,
											"end": 7894,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7892,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8001,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7991,
											"end": 7997,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7988,
											"end": 8002,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7965,
											"end": 8003,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7964,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7962,
											"end": 7964,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8036,
											"end": 8113,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8033,
											"end": 8034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8114,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8137,
											"end": 8141,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 8134,
											"end": 8135,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8127,
											"end": 8142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8165,
											"end": 8169,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8162,
											"end": 8163,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8155,
											"end": 8170,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7964,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7962,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 8186,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 8186,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 8186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 8186,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"maxSupply()": "d5abeb01",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"setLoStake(address)": "d1823b28",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"viewAdmin()": "9910ed9a",
							"viewLoStake()": "77b06d01"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lo_stake\",\"type\":\"address\"}],\"name\":\"setLoStake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewLoStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LokeyERC20.sol\":\"LokeyER20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/LokeyERC20.sol\":{\"keccak256\":\"0xceec5a4551249d7cd0c3e667c8e25736f1afb3fa13ccba991a855decbd8dab7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb2e7a254f75a70decbcc5f911cfa6d0ea7218b0a8b66f55f51413fe226e60aa\",\"dweb:/ipfs/QmYXvnESwqKhvXuhNK8L3BMPprCQSP2APMz6zHax8JUMEf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "contracts/LokeyERC20.sol:LokeyER20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "contracts/LokeyERC20.sol:LokeyER20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "contracts/LokeyERC20.sol:LokeyER20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "contracts/LokeyERC20.sol:LokeyER20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "contracts/LokeyERC20.sol:LokeyER20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 717,
								"contract": "contracts/LokeyERC20.sol:LokeyER20",
								"label": "lo_stake",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 720,
								"contract": "contracts/LokeyERC20.sol:LokeyER20",
								"label": "max_supply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 722,
								"contract": "contracts/LokeyERC20.sol:LokeyER20",
								"label": "admin",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							710
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 664,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 689,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 711,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 710,
										"src": "1421:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "1430:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "1438:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								688,
								663,
								710
							],
							"name": "ERC20",
							"nameLocation": "1412:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1459:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1511:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1585:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1620:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1646:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2034:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2044:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2052:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1990:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2011:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:0"
									},
									"scope": 585,
									"src": "1978:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										675
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2225:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2235:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2210:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:0"
									},
									"scope": 585,
									"src": "2156:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										681
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2438:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2448:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2423:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:0"
									},
									"scope": 585,
									"src": "2367:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3158:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3168:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3151:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:0"
									},
									"scope": 585,
									"src": "3093:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3314:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3331:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3324:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3305:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:0"
									},
									"scope": 585,
									"src": "3244:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3491:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3508:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3501:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:0"
									},
									"scope": 585,
									"src": "3408:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3814:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3824:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "3840:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3872:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3879:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3883:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "3900:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3747:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3759:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:0"
									},
									"scope": 585,
									"src": "3729:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4074:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4091:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4103:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4084:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:0"
									},
									"scope": 585,
									"src": "3976:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4522:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4532:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "4548:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4579:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "4570:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4612:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4516:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:0"
									},
									"scope": 585,
									"src": "4433:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5325:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5335:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5353:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5391:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5406:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5375:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5439:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5443:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5423:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5460:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5223:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5265:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5319:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:0"
									},
									"scope": 585,
									"src": "5192:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "5967:140:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5977:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5993:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6024:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6050:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6057:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6040:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6068:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "6015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6015:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6089:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5917:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5961:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:0"
									},
									"scope": 585,
									"src": "5873:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6693:328:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6711:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6703:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6719:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6703:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6749:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6741:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6778:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6768:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6741:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6811:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6831:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6811:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6803:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "6898:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6931:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "6938:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6947:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6966:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6947:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "6922:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6922:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "6922:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7010:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7003:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6113:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6603:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6646:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6638:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6686:6:0"
									},
									"scope": 585,
									"src": "6594:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7583:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7601:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7617:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7609:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7609:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7601:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7621:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7593:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7679:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7693:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7685:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7685:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7685:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7679:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7697:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7671:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7671:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7671:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7767:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7773:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "7746:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7746:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7803:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "7795:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7817:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7827:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7817:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7795:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7850:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7865:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7850:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7873:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7842:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "7842:72:0"
											},
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "7924:73:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7948:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7958:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7948:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7966:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7980:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7966:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7948:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "7948:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8006:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8016:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8006:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8023:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8006:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8006:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8054:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8060:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8045:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8045:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8040:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8102:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8108:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8112:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8082:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8082:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8082:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7027:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7484:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7511:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7503:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7533:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7525:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7493:72:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7583:0:0"
									},
									"scope": 585,
									"src": "7475:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8467:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8485:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8504:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8496:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8496:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8485:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8508:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8477:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8477:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8477:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8574:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8574:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8574:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8553:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8553:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8553:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8613:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8629:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8613:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8613:22:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 377,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8645:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 379,
														"indexExpression": {
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8645:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 380,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8667:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8645:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "8645:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8705:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8697:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8697:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8697:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8709:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8688:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8688:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "EmitStatement",
												"src": "8683:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8756:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8756:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8736:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8736:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8736:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8132:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8411:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8425:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8417:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8442:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8434:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8416:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8467:0:0"
									},
									"scope": 585,
									"src": "8402:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "9176:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "9194:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9213:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9205:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9205:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9205:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9194:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9217:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "9186:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9302:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9294:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9294:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9294:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9306:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9264:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9264:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "9264:49:0"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9332:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "9324:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"baseExpression": {
														"id": 431,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9349:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 433,
													"indexExpression": {
														"id": 432,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "9359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9349:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9324:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "9385:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "9403:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9385:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9411:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9377:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "9377:71:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "9458:79:0",
												"statements": [
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 442,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9482:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "9492:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9482:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 445,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "9503:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 446,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "9520:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9503:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9482:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "9482:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9546:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "9562:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9546:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "9546:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9610:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9602:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9602:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "9584:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9584:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "9579:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9652:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9669:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9661:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9661:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9661:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9632:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9632:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9632:48:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "8797:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9120:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9134:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9126:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9151:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9143:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9125:33:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9176:0:0"
									},
									"scope": 585,
									"src": "9111:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "10223:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10241:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10258:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10250:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10250:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10250:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10241:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10262:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10233:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "10233:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "10319:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10338:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10330:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10330:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10330:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10319:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10342:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "10311:68:0"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 504,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10390:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 505,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10402:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10390:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 508,
														"indexExpression": {
															"id": 506,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10390:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "10420:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10390:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "10390:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "10450:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10457:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10466:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "10441:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10441:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "10436:37:0"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "9693:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10119:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10137:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10168:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10160:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10193:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10127:78:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:0"
									},
									"scope": 585,
									"src": "10110:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "10881:321:0",
										"statements": [
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10899:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "10891:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "10928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "10935:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 531,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10918:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10918:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10891:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "10957:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10982:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10982:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 537,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10977:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10977:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10977:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10957:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "10953:243:0",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "10996:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 544,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "11018:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "11038:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11018:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11046:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 543,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11010:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11010:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "11010:68:0"
														},
														{
															"id": 558,
															"nodeType": "UncheckedBlock",
															"src": "11092:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 551,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "11129:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 552,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "11136:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 553,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "11145:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 554,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "11164:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11145:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 550,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "11120:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11120:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "11120:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "10486:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10770:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10803:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10826:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10851:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10785:78:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10881:0:0"
									},
									"scope": 585,
									"src": "10761:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "11905:2:0",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "11208:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11795:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11833:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11825:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11855:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11847:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11815:72:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11905:0:0"
									},
									"scope": 585,
									"src": "11786:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "12613:2:0",
										"statements": []
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "11913:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12504:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12541:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12533:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12563:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12555:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12583:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12575:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12523:72:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12613:0:0"
									},
									"scope": 585,
									"src": "12495:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "1403:11214:0",
							"usedErrors": []
						}
					],
					"src": "105:12513:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 597,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 606,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 663,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 663,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 663,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 663,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 663,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 663,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 664,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "305:6:2"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 688,
							"linearizedBaseContracts": [
								688,
								663
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 688,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 688,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 684,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 688,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 689,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							710
						]
					},
					"id": 711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 691,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 710,
							"linearizedBaseContracts": [
								710
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 696,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 695,
												"id": 698,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 710,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 705,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 704,
												"id": 707,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 702,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 710,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 711,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"contracts/LokeyERC20.sol": {
				"ast": {
					"absolutePath": "contracts/LokeyERC20.sol",
					"exportedSymbols": {
						"Context": [
							710
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						],
						"LokeyER20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 712,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 586,
							"src": "60:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 714,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 585,
										"src": "141:5:4"
									},
									"id": 715,
									"nodeType": "InheritanceSpecifier",
									"src": "141:5:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844,
								585,
								688,
								663,
								710
							],
							"name": "LokeyER20",
							"nameLocation": "128:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 717,
									"mutability": "mutable",
									"name": "lo_stake",
									"nameLocation": "170:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 844,
									"src": "154:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 716,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "154:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 720,
									"mutability": "mutable",
									"name": "max_supply",
									"nameLocation": "201:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 844,
									"src": "185:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 718,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "185:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030",
										"id": 719,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "214:16:4",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"value": "1000000000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 722,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "253:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 844,
									"src": "237:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 721,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "237:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "306:76:4",
										"statements": [
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 729,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "317:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 730,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "325:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "325:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "317:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "317:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 735,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "352:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3530303030303030",
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "359:14:4",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
																"typeString": "int_const 50000000000000000000000000"
															},
															"value": "50000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
																"typeString": "int_const 50000000000000000000000000"
															}
														],
														"id": 734,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "346:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "346:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "346:28:4"
											}
										]
									},
									"id": 740,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4c6f6b657944414f",
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "285:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_100ff568013c949a6ce355a8e9b60fda664bfd358dc26edd4e686b96e3f76c79",
														"typeString": "literal_string \"LokeyDAO\""
													},
													"value": "LokeyDAO"
												},
												{
													"hexValue": "4c4f4b4559",
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "297:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a88cbed3d9ceeb3b4694374289bc8290bc2b8c53684fd384bd6855e7fd960f0f",
														"typeString": "literal_string \"LOKEY\""
													},
													"value": "LOKEY"
												}
											],
											"id": 727,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 724,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 585,
												"src": "279:5:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "279:26:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "276:2:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:0:4"
									},
									"scope": 844,
									"src": "265:117:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "411:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 743,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "430:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "430:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 745,
																"name": "lo_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "444:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "430:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a6564",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "454:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															},
															"value": "Unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															}
														],
														"id": 742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "422:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "422:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "422:47:4"
											},
											{
												"id": 750,
												"nodeType": "PlaceholderStatement",
												"src": "480:1:4"
											}
										]
									},
									"id": 752,
									"name": "loStakeOnly",
									"nameLocation": "399:11:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "411:0:4"
									},
									"src": "390:99:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "561:184:4",
										"statements": [
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "total_sup",
														"nameLocation": "580:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "572:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "572:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 763,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "592:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "592:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "572:33:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 767,
																	"name": "total_sup",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "624:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 768,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "636:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "624:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 770,
																"name": "max_supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "646:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "624:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c4f4b45593a2045786365656473204c696d6974",
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "658:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc3050eef91b6ea1da8b76f77cddca1ceafc9e9b7bd78b16509a333b04b0c718",
																"typeString": "literal_string \"LOKEY: Exceeds Limit\""
															},
															"value": "LOKEY: Exceeds Limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc3050eef91b6ea1da8b76f77cddca1ceafc9e9b7bd78b16509a333b04b0c718",
																"typeString": "literal_string \"LOKEY: Exceeds Limit\""
															}
														],
														"id": 766,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "616:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "616:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "616:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 776,
															"name": "lo_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "698:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 777,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "708:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 775,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "692:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "692:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "692:23:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "733:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 760,
												"id": 781,
												"nodeType": "Return",
												"src": "726:11:4"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 757,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 756,
												"name": "loStakeOnly",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 752,
												"src": "534:11:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "534:11:4"
										}
									],
									"name": "mint",
									"nameLocation": "506:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "519:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "511:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:16:4"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "555:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:6:4"
									},
									"scope": 844,
									"src": "497:248:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "823:193:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 793,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "842:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "842:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 795,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "856:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "842:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a6564",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "863:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															},
															"value": "Unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															}
														],
														"id": 792,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "834:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "834:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "834:44:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "lo_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "897:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "917:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "909:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 802,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "909:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "909:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "897:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f5374616b6520616c726561647920736574",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "921:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_072cc2bce1765f498e57550dcdc4f9ab1a052ff702e9c556a2d2ee9993573db0",
																"typeString": "literal_string \"LoStake already set\""
															},
															"value": "LoStake already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_072cc2bce1765f498e57550dcdc4f9ab1a052ff702e9c556a2d2ee9993573db0",
																"typeString": "literal_string \"LoStake already set\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "889:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "889:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "889:54:4"
											},
											{
												"expression": {
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 810,
														"name": "lo_stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "954:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 811,
														"name": "_lo_stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "965:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "954:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "954:20:4"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "993:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 815,
															"name": "lo_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "999:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 816,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "992:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
														"typeString": "tuple(bool,address)"
													}
												},
												"functionReturnParameters": 791,
												"id": 817,
												"nodeType": "Return",
												"src": "985:23:4"
											}
										]
									},
									"functionSelector": "d1823b28",
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLoStake",
									"nameLocation": "762:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "_lo_stake",
												"nameLocation": "781:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "773:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:19:4"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "808:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "808:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "814:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:15:4"
									},
									"scope": 844,
									"src": "753:263:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "1075:36:4",
										"statements": [
											{
												"expression": {
													"id": 824,
													"name": "max_supply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 720,
													"src": "1093:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 823,
												"id": 825,
												"nodeType": "Return",
												"src": "1086:17:4"
											}
										]
									},
									"functionSelector": "d5abeb01",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "1033:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1042:2:4"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1066:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:9:4"
									},
									"scope": 844,
									"src": "1024:87:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "1172:34:4",
										"statements": [
											{
												"expression": {
													"id": 832,
													"name": "lo_stake",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 717,
													"src": "1190:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 831,
												"id": 833,
												"nodeType": "Return",
												"src": "1183:15:4"
											}
										]
									},
									"functionSelector": "77b06d01",
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewLoStake",
									"nameLocation": "1128:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:2:4"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1163:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:9:4"
									},
									"scope": 844,
									"src": "1119:87:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "1265:31:4",
										"statements": [
											{
												"expression": {
													"id": 840,
													"name": "admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 722,
													"src": "1283:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 839,
												"id": 841,
												"nodeType": "Return",
												"src": "1276:12:4"
											}
										]
									},
									"functionSelector": "9910ed9a",
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewAdmin",
									"nameLocation": "1223:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1232:2:4"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1256:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:9:4"
									},
									"scope": 844,
									"src": "1214:82:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 845,
							"src": "119:1180:4",
							"usedErrors": []
						}
					],
					"src": "33:1266:4"
				},
				"id": 4
			}
		}
	}
}